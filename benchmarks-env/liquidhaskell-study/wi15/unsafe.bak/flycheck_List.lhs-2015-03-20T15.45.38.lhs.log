LiquidHaskell Copyright 2009-15 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  Extracted Core using GHC *******************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  Uniqify & Rename ***************************************************
[0m[1;90m 
[0mRESULT: Unsafe [Just 252,Just 349,Just 351]
[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  annotate ***********************************************************
[0m[1;90m 
[0m[1;91m
**** RESULT: UNSAFE ************************************************************
[0m

 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-20T15.45.38.lhs:196:40-60: Error: Liquid Type Mismatch
 
 196 | zipWith f _          _          = die  "Bad call to zipWith"
                                              ^^^^^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : [Char] | VV == ?a
                         && len VV >= 0}
  
   not a subtype of Required type
     VV : {VV : [Char] | false}
  
   In Context
     ?b : {?b : Addr# | ?b ~~ "Bad call to zipWith"
                        && strLen ?b == 19}
      
     ?a : {?a : [Char] | ?a ~~ ?b
                         && len ?a == strLen ?b
                         && len ?a >= 0}


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-20T15.45.38.lhs:222:24-47: Error: Liquid Type Mismatch
 
 222 | prop_concat = lAssert (length (concat xss) == 6)
                              ^^^^^^^^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : Bool | VV == ?d}
  
   not a subtype of Required type
     VV : {VV : Bool | Prop VV}
  
   In Context
     ?c : {?c : Int | ?c == (6 : int)}
      
     ?b : {?b : Int | ?b == size ?a}
      
     ?d : {?d : Bool | Prop ?d <=> ?b == ?c}
      
     ?a : {?a : (List Int) | 0 <= size ?a}
