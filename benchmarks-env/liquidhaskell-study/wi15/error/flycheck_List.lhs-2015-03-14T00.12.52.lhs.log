LiquidHaskell Copyright 2009-15 Regents of the University of California. All Rights Reserved.

[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  annotate ***********************************************************
[0m[1;90m 
[0m[1;95m
**** RESULT: ERROR *************************************************************
[0m

Invalid Source


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-14T00.12.52.lhs:226:32-58: Error: GHC Error
 
 226 | concatHelper x1  (x2 :+: xs) = concatHelper (append x1 x2)  
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
 
     Occurs check: cannot construct the infinite type:
  t ~ List (List a) -> t
Relevant bindings include
  xs :: List (List a)
    (bound at /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-14T00.12.52.lhs:226:26)
  x2 :: List a
    (bound at /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-14T00.12.52.lhs:226:19)
  x1 :: List a
    (bound at /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-14T00.12.52.lhs:226:14)
  concatHelper :: List a -> List (List a) -> t
    (bound at /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-14T00.12.52.lhs:226:1)


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-14T00.12.52.lhs:(229,31)-(231,41): Error: GHC Error
     Couldn't match expected type â€˜List (List a)
                              -> ((a1 -> b0 -> b0) -> b0 -> List a1 -> b0)
                              -> (List a2 -> List a2 -> List a2)
                              -> List a3
                              -> List (List a)
                              -> List aâ€™
            with actual type â€˜List a0â€™
Relevant bindings include
  xs :: List (List a)
    (bound at /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-14T00.12.52.lhs:229:24)
  x2 :: List a
    (bound at /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-14T00.12.52.lhs:229:17)
  x1 :: List a
    (bound at /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-14T00.12.52.lhs:229:9)
  concat :: List (List a) -> List a
    (bound at /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-14T00.12.52.lhs:229:1)
