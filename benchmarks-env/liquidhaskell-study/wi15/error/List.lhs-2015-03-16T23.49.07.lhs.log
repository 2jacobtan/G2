LiquidHaskell Copyright 2009-15 Regents of the University of California. All Rights Reserved.

[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  annotate ***********************************************************
[0m[1;90m 
[0m[1;95m
**** RESULT: ERROR *************************************************************
[0m

Invalid Source


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/List.lhs-2015-03-16T23.49.07.lhs:163:20-41: Error: GHC Error
 
 163 | map f (x :+: xs) = (f x) (:+:) (map f xs)
                          ^^^^^^^^^^^^^^^^^^^^^^
 
     Couldn't match expected type â€˜(a0 -> List a0 -> List a0)
                              -> List b -> List bâ€™
            with actual type â€˜bâ€™
  â€˜bâ€™ is a rigid type variable bound by
      the type signature for map :: (a -> b) -> List a -> List b
      at /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/List.lhs-2015-03-16T23.49.07.lhs:42:14
Relevant bindings include
  f :: a -> b
    (bound at /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/List.lhs-2015-03-16T23.49.07.lhs:163:5)
  map :: (a -> b) -> List a -> List b
    (bound at /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/List.lhs-2015-03-16T23.49.07.lhs:162:1)
