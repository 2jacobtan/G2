LiquidHaskell Copyright 2009-15 Regents of the University of California. All Rights Reserved.

[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  annotate ***********************************************************
[0m[1;90m 
[0m[1;95m
**** RESULT: ERROR *************************************************************
[0m

Invalid Source


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_KMeans.lhs-2015-03-16T10.02.52.lhs:94:48-105: Error: GHC Error
 
 94 | nearest k n centers p = minKeyMap (M.fromList (map (\(x1, x2) -> (x1, distance n p x2)) M.toList(centers)))
                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 
     Couldn't match expected type â€˜Centering -> [(Center, v0)]â€™
            with actual type â€˜List (t0, Double)â€™


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_KMeans.lhs-2015-03-16T10.02.52.lhs:94:89-96: Error: GHC Error
 
 94 | nearest k n centers p = minKeyMap (M.fromList (map (\(x1, x2) -> (x1, distance n p x2)) M.toList(centers)))
                                                                                              ^^^^^^^^
 
     Couldn't match expected type â€˜List (t0, Point)â€™
            with actual type â€˜Map k0 a0 -> [(k0, a0)]â€™
