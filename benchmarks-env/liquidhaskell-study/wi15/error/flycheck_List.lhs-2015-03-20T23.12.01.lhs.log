LiquidHaskell Copyright 2009-15 Regents of the University of California. All Rights Reserved.

[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  annotate ***********************************************************
[0m[1;90m 
[0m[1;95m
**** RESULT: ERROR *************************************************************
[0m

 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-20T23.12.01.lhs:243:13: Error: Cannot promote Haskell function llsize to logic
     Cannot transform to Logic:	case ds_d1B2 of lq_anf$ {
  List.Emp ->
    case ds_d1B3 of lq_anf$ {
      List.Emp -> GHC.Types.I# 0;
      List.:+: lq_anf$ lq_anf$ ->
        case ds_d1B3 of lq_anf$ {
          List.Emp -> List.length ds_d1B2;
          List.:+: lq_anf$ lq_anf$ ->
            let {
              lq_anf$ :: GHC.Types.Int
              [LclId, Str=DmdType]
              lq_anf$ = List.length ds_d1B2 } in
            let {
              lq_anf$ :: GHC.Types.Int
              [LclId, Str=DmdType]
              lq_anf$ = List.llsize ds_d1B3 } in
            GHC.Num.+ lq_anf$ lq_anf$
        }
    };
  List.:+: lq_anf$ lq_anf$ ->
    case ds_d1B3 of lq_anf$ {
      List.Emp -> List.length ds_d1B2;
      List.:+: lq_anf$ lq_anf$ ->
        let {
          lq_anf$ :: GHC.Types.Int
          [LclId, Str=DmdType]
          lq_anf$ = List.length ds_d1B2 } in
        let {
          lq_anf$ :: GHC.Types.Int
          [LclId, Str=DmdType]
          lq_anf$ = List.llsize ds_d1B3 } in
        GHC.Num.+ lq_anf$ lq_anf$
    }
}
