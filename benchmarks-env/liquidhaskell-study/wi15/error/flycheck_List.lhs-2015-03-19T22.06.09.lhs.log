LiquidHaskell Copyright 2009-15 Regents of the University of California. All Rights Reserved.

[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  annotate ***********************************************************
[0m[1;90m 
[0m[1;95m
**** RESULT: ERROR *************************************************************
[0m

Invalid Source


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-19T22.06.09.lhs:90:24-26: Error: GHC Error
 
 90 | length Emp        = 0::Num
                             ^^^
 
     Expecting one more argument to â€˜Numâ€™
Expected a type, but â€˜Numâ€™ has kind â€˜* -> Constraintâ€™


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-19T22.06.09.lhs:163:36-37: Error: GHC Error
 
 163 | prop_map f xs = lAssert (length xs == length (map f xs))
                                          ^^
 
     No instance for (Eq a0) arising from a use of â€˜==â€™
The type variable â€˜a0â€™ is ambiguous
Note: there are several potential instances:
  instance Eq a => Eq (Maybe a) -- Defined in â€˜GHC.Baseâ€™
  instance Eq a => Eq (Ratio a) -- Defined in â€˜GHC.Realâ€™
  instance Eq Ordering -- Defined in â€˜GHC.Classesâ€™
  ...plus 25 others


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-19T22.06.09.lhs:197:38-39: Error: GHC Error
 
 197 | prop_zipWith xs = lAssert (length xs == length x2s)
                                            ^^
 
     Could not deduce (Eq a1) arising from a use of â€˜==â€™
from the context (Num c)
  bound by the inferred type of
           prop_zipWith :: Num c => List c -> Bool
  at /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-19T22.06.09.lhs:(197,1)-(199,35)
The type variable â€˜a1â€™ is ambiguous
Note: there are several potential instances:
  instance Eq a => Eq (Maybe a) -- Defined in â€˜GHC.Baseâ€™
  instance Eq a => Eq (Ratio a) -- Defined in â€˜GHC.Realâ€™
  instance Eq Ordering -- Defined in â€˜GHC.Classesâ€™
  ...plus 25 others
