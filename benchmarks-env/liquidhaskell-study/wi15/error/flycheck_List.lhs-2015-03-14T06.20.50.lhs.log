LiquidHaskell Copyright 2009-15 Regents of the University of California. All Rights Reserved.

[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  annotate ***********************************************************
[0m[1;90m 
[0m[1;95m
**** RESULT: ERROR *************************************************************
[0m

 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-14T06.20.50.lhs:216:13: Error: Cannot promote Haskell function concatHelperMeasure to logic
     Cannot transform to Logic:	case ds_d1vZ of lq_anf$ {
  List.Emp -> List.concatHelperMeasure xs2;
  List.:+: _ [Occ=Dead] xs1 ->
    let {
      lq_anf$ :: GHC.Integer.Type.Integer
      [LclId, Str=DmdType]
      lq_anf$ = __integer 1 } in
    let {
      lq_anf$ :: a
      [LclId, Str=DmdType]
      lq_anf$ = GHC.Num.fromInteger lq_anf$ } in
    let {
      lq_anf$ :: List.List (List.List t)
      [LclId, Str=DmdType]
      lq_anf$ = List.:+: xs1 xs2 } in
    let {
      lq_anf$ :: a
      [LclId, Str=DmdType]
      lq_anf$ = List.concatHelperMeasure lq_anf$ } in
    GHC.Num.+ lq_anf$ lq_anf$
}
