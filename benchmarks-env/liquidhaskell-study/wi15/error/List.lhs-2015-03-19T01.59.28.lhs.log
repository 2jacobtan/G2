LiquidHaskell Copyright 2009-15 Regents of the University of California. All Rights Reserved.

[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  annotate ***********************************************************
[0m[1;90m 
[0m[1;95m
**** RESULT: ERROR *************************************************************
[0m

Invalid Source


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/List.lhs-2015-03-19T01.59.28.lhs:223:23-27: Error: GHC Error
 
 223 | append xs ys = foldr1 (:+:) ys xs
                             ^^^^^
 
     Couldn't match type â€˜List (t1 -> t)â€™ with â€˜t1 -> tâ€™
Expected type: (t1 -> t) -> (t1 -> t) -> t1 -> t
  Actual type: (t1 -> t) -> List (t1 -> t) -> List (t1 -> t)
Relevant bindings include
  ys :: List (t1 -> t)
    (bound at /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/List.lhs-2015-03-19T01.59.28.lhs:223:11)
  xs :: t1
    (bound at /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/List.lhs-2015-03-19T01.59.28.lhs:223:8)
  append :: t1 -> List (t1 -> t) -> t
    (bound at /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/List.lhs-2015-03-19T01.59.28.lhs:223:1)


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/List.lhs-2015-03-19T01.59.28.lhs:227:38-39: Error: GHC Error
 
 227 | concat (x :+: xs) = append x (concat xs)
                                            ^^
 
     Couldn't match type â€˜aâ€™ with â€˜List a -> List aâ€™
  â€˜aâ€™ is a rigid type variable bound by
      the type signature for concat :: List (List a) -> List a
      at /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/List.lhs-2015-03-19T01.59.28.lhs:44:14
Expected type: List (List (List a -> List a))
  Actual type: List (List a)
Relevant bindings include
  xs :: List (List a)
    (bound at /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/List.lhs-2015-03-19T01.59.28.lhs:227:15)
  x :: List a
    (bound at /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/List.lhs-2015-03-19T01.59.28.lhs:227:9)
  concat :: List (List a) -> List a
    (bound at /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/List.lhs-2015-03-19T01.59.28.lhs:226:1)
