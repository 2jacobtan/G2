5476
flycheck_KMeans.lhs-2015-03-20T00.42.53.lhs
(197, '35-36')
kmeans1
[' /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_KMeans.lhs-2015-03-20T00.42.53.lhs:197:35-36: Error: Liquid Type Mismatch', ' 197 |     newClusters    = mapReduce fm fr ps']

LiquidHaskell Copyright 2013-17 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  A-Normalization ****************************************************
[0m[1;90m 
[0m
ERROR:
G2: ERROR OCCURRED IN LIQUIDHASKELL
[<no source information>:0:0: Error: Illegal type specification for `constructor GHC.Tuple.(,)`
    constructor GHC.Tuple.(,) :: x_Tuple21:a -> x_Tuple22:{VV : b | true} -> {VV : (a, b) | cludim VV == size x_Tuple22
                                                                                            && snd VV == x_Tuple22
                                                                                            && fst VV == x_Tuple21
                                                                                            && x_Tuple22 VV == x_Tuple22
                                                                                            && x_Tuple21 VV == x_Tuple21}
    Sort Error in Refinement: {VV : (Tuple a_12 b_13) | ((((cludim VV == size x_Tuple22##GHC.Tuple.(,)
                                                            && snd VV == x_Tuple22##GHC.Tuple.(,))
                                                           && fst VV == x_Tuple21##GHC.Tuple.(,))
                                                          && x_Tuple22 VV == x_Tuple22##GHC.Tuple.(,))
                                                         && x_Tuple21 VV == x_Tuple21##GHC.Tuple.(,))}
    Unbound Symbol a_12
 Perhaps you meant: papp2, p2
  because
Cannot unify int with a_12 in expression: cludim VV]
CallStack (from HasCallStack):
  error, called at src/G2/Internals/Liquid/Interface.hs:77:29 in main:G2.Internals.Liquid.Interface


LIQUID_OUT:
LiquidHaskell Copyright 2009-15 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  Extracted Core using GHC *******************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  Uniqify & Rename ***************************************************
[0m[1;90m 
[0mRESULT: Unsafe [Just 32,Just 61,Just 109,Just 31]
[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  annotate ***********************************************************
[0m[1;90m 
[0m[1;91m
**** RESULT: UNSAFE ************************************************************
[0m

 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_KMeans.lhs-2015-03-20T00.42.53.lhs:192:21-41: Error: Liquid Type Mismatch
 
 192 | kmeans1 k n ps cs = normalize newClusters
                           ^^^^^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : (List Double) | 0 <= size VV}
  
   not a subtype of Required type
     VV : {VV : (List Double) | size VV == n}
  
   In Context
     n : {n : Int | n >= 0}


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_KMeans.lhs-2015-03-20T00.42.53.lhs:197:35-36: Error: Liquid Type Mismatch
 
 197 |     newClusters    = mapReduce fm fr ps
                                         ^^
 
   Inferred type
     VV : {VV : (List Double) | 0 <= size VV}
  
   not a subtype of Required type
     VV : {VV : (List Double) | size VV == cludim ?a}
  
   In Context
     ?a : (Int, (List Double))


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_KMeans.lhs-2015-03-20T00.42.53.lhs:199:33-48: Error: Liquid Type Mismatch
 
 199 |     fm p           = singleton (nearest k n cs p, (1 :: Int, p))
                                       ^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : (List Double) | VV == p
                                && 0 <= size VV}
  
   not a subtype of Required type
     VV : {VV : (List Double) | size VV == n}
  
   In Context
     p : {p : (List Double) | 0 <= size p}
      
     n : {n : Int | n >= 0}
