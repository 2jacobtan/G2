8787
KMeans.lhs-2015-03-21T05.26.58.lhs
(196, '21-42')
kmeans1
[' /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/KMeans.lhs-2015-03-21T05.26.58.lhs:196:21-42: Error: Liquid Type Mismatch', ' 196 |     fr wp1 wp2    = mergeCluster n wp1 wp2']

LiquidHaskell Copyright 2013-17 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  A-Normalization ****************************************************
[0m[1;90m 
[0mThe call
kmeans1 0 0 Emp (fromList []) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 0 Emp (fromList ([(0, Emp)])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 0 Emp (fromList ([(0, Emp), (0, Emp)])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 0 Emp (fromList ([(0, Emp), (0, Emp), (0, Emp)])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 1 Emp (fromList ([(0, (0.0) :+: Emp)])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 1 Emp (fromList ([(0, (0.0) :+: Emp), (0, (0.0) :+: Emp)])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 1 Emp (fromList ([(0, (0.0) :+: Emp), (0, (0.0) :+: Emp), (0, (0.0) :+: Emp)])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 2 Emp (fromList ([(0, (0.0) :+: ((0.0) :+: Emp))])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 2 Emp (fromList ([(0, (0.0) :+: ((0.0) :+: Emp)), (0, (0.0) :+: ((0.0) :+: Emp))])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 3 Emp (fromList ([(0, (0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 3 Emp (fromList ([(0, (0.0) :+: ((0.0) :+: ((0.0) :+: Emp))), (0, (0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 4 Emp (fromList ([(0, (0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))))])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 4 Emp (fromList ([(0, (0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))), (0, (0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))))])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 5 Emp (fromList ([(0, (0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))))])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 6 Emp (fromList ([(0, (0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))))))])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 7 Emp (fromList ([(0, (0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))))))])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 8 Emp (fromList ([(0, (0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))))))))])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 9 Emp (fromList ([(0, (0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))))))))])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 10 Emp (fromList ([(0, (0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))))))))))])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 11 Emp (fromList ([(0, (0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))))))))))])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 12 Emp (fromList ([(0, (0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))))))))))))])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 13 Emp (fromList ([(0, (0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))))))))))))])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 14 Emp (fromList ([(0, (0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))))))))))))))])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 15 Emp (fromList ([(0, (0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))))))))))))))])) = error
violates kmeans1's refinement type
Concrete


ERROR:


LIQUID_OUT:
LiquidHaskell Copyright 2009-15 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  Extracted Core using GHC *******************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  Uniqify & Rename ***************************************************
[0m[1;90m 
[0mRESULT: Unsafe [Just 148,Just 150,Just 30,Just 142]
[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  annotate ***********************************************************
[0m[1;90m 
[0m[1;91m
**** RESULT: UNSAFE ************************************************************
[0m

 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/KMeans.lhs-2015-03-21T05.26.58.lhs:190:21-41: Error: Liquid Type Mismatch
 
 190 | kmeans1 k n ps cs = normalize newClusters
                           ^^^^^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : (List Double) | 0 <= size VV}
  
   not a subtype of Required type
     VV : {VV : (List Double) | size VV == n}
  
   In Context
     n : {n : Int | n >= 0}


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/KMeans.lhs-2015-03-21T05.26.58.lhs:195:32-47: Error: Liquid Type Mismatch
 
 195 |     fm p          = singleton (nearest k n cs p, (1 :: Int, p))
                                      ^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : (List Double) | VV == p
                                && 0 <= size VV}
  
   not a subtype of Required type
     VV : {VV : (List Double) | size VV == n}
  
   In Context
     p : {p : (List Double) | 0 <= size p}
      
     n : {n : Int | n >= 0}


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/KMeans.lhs-2015-03-21T05.26.58.lhs:196:21-38: Error: Liquid Type Mismatch
 
 196 |     fr wp1 wp2    = mergeCluster n wp1 wp2
                           ^^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : (List Double) | 0 <= size VV}
  
   not a subtype of Required type
     VV : {VV : (List Double) | size VV == n}
  
   In Context
     n : {n : Int | n >= 0}


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/KMeans.lhs-2015-03-21T05.26.58.lhs:196:21-42: Error: Liquid Type Mismatch
 
 196 |     fr wp1 wp2    = mergeCluster n wp1 wp2
                           ^^^^^^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : (List Double) | 0 <= size VV}
  
   not a subtype of Required type
     VV : {VV : (List Double) | size VV == n}
  
   In Context
     n : {n : Int | n >= 0}
