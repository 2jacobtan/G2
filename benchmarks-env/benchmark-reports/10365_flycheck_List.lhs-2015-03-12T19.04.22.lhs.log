10365
flycheck_List.lhs-2015-03-12T19.04.22.lhs
(196, '40-60')
zipWith
[' /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-12T19.04.22.lhs:196:40-60: Error: Liquid Type Mismatch', ' 196 | zipWith f _          _          = die  "Bad call to zipWith"']

LiquidHaskell Copyright 2013-17 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  A-Normalization ****************************************************
[0m[1;90m 
[0mzipWith undefined (0 :+: Emp) Emp = error
makes a call to
die fs? = error
violating die's refinement type
Concrete

zipWith undefined Emp (0 :+: Emp) = error
makes a call to
die fs? = error
violating die's refinement type
Concrete

zipWith undefined (0 :+: (0 :+: Emp)) (0 :+: Emp) = error
makes a call to
die ("Bad call to zipWith") = error
violating die's refinement type
Concrete

zipWith undefined Emp (0 :+: (0 :+: Emp)) = error
makes a call to
die fs? = error
violating die's refinement type
Concrete

zipWith undefined (0 :+: Emp) (0 :+: (0 :+: Emp)) = error
makes a call to
die ("Bad call to zipWith") = error
violating die's refinement type
Concrete

zipWith undefined (0 :+: (0 :+: (0 :+: Emp))) (0 :+: (0 :+: Emp)) = error
makes a call to
die ("Bad call to zipWith") = error
violating die's refinement type
Concrete

zipWith undefined Emp (0 :+: (0 :+: (0 :+: Emp))) = error
makes a call to
die fs? = error
violating die's refinement type
Concrete

zipWith undefined (0 :+: Emp) (0 :+: (0 :+: (0 :+: Emp))) = error
makes a call to
die ("Bad call to zipWith") = error
violating die's refinement type
Concrete

zipWith undefined (0 :+: (0 :+: Emp)) (0 :+: (0 :+: (0 :+: Emp))) = error
makes a call to
die ("Bad call to zipWith") = error
violating die's refinement type
Concrete

zipWith undefined (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) (0 :+: (0 :+: (0 :+: Emp))) = error
makes a call to
die ("Bad call to zipWith") = error
violating die's refinement type
Concrete

zipWith undefined Emp (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = error
makes a call to
die fs? = error
violating die's refinement type
Concrete

zipWith undefined (0 :+: Emp) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = error
makes a call to
die ("Bad call to zipWith") = error
violating die's refinement type
Concrete

zipWith undefined (0 :+: (0 :+: Emp)) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = error
makes a call to
die ("Bad call to zipWith") = error
violating die's refinement type
Concrete

zipWith undefined (0 :+: (0 :+: (0 :+: Emp))) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = error
makes a call to
die ("Bad call to zipWith") = error
violating die's refinement type
Concrete

zipWith undefined (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = error
makes a call to
die ("Bad call to zipWith") = error
violating die's refinement type
Concrete

zipWith undefined Emp (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) = error
makes a call to
die fs? = error
violating die's refinement type
Concrete

zipWith undefined (0 :+: Emp) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) = error
makes a call to
die ("Bad call to zipWith") = error
violating die's refinement type
Concrete

zipWith undefined (0 :+: (0 :+: Emp)) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) = error
makes a call to
die ("Bad call to zipWith") = error
violating die's refinement type
Concrete

zipWith undefined (0 :+: (0 :+: (0 :+: Emp))) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) = error
makes a call to
die ("Bad call to zipWith") = error
violating die's refinement type
Concrete

zipWith undefined (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) = error
makes a call to
die ("Bad call to zipWith") = error
violating die's refinement type
Concrete

zipWith undefined (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) = error
makes a call to
die ("Bad call to zipWith") = error
violating die's refinement type
Concrete

zipWith undefined Emp (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) = error
makes a call to
die fs? = error
violating die's refinement type
Concrete

zipWith undefined (0 :+: Emp) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) = error
makes a call to
die ("Bad call to zipWith") = error
violating die's refinement type
Concrete

zipWith undefined (0 :+: (0 :+: Emp)) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) = error
makes a call to
die ("Bad call to zipWith") = error
violating die's refinement type
Concrete

zipWith undefined (0 :+: (0 :+: (0 :+: Emp))) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) = error
makes a call to
die ("Bad call to zipWith") = error
violating die's refinement type
Concrete

zipWith undefined (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) = error
makes a call to
die ("Bad call to zipWith") = error
violating die's refinement type
Concrete

zipWith undefined Emp (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))) = error
makes a call to
die fs? = error
violating die's refinement type
Concrete

zipWith undefined (0 :+: Emp) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))) = error
makes a call to
die ("Bad call to zipWith") = error
violating die's refinement type
Concrete

zipWith undefined (0 :+: (0 :+: Emp)) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))) = error
makes a call to
die ("Bad call to zipWith") = error
violating die's refinement type
Concrete

zipWith undefined (0 :+: (0 :+: (0 :+: Emp))) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))) = error
makes a call to
die ("Bad call to zipWith") = error
violating die's refinement type
Concrete

zipWith undefined Emp (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))))) = error
makes a call to
die fs? = error
violating die's refinement type
Concrete

zipWith undefined (0 :+: Emp) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))))) = error
makes a call to
die ("Bad call to zipWith") = error
violating die's refinement type
Concrete

zipWith undefined (0 :+: (0 :+: Emp)) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))))) = error
makes a call to
die ("Bad call to zipWith") = error
violating die's refinement type
Concrete

zipWith undefined (0 :+: (0 :+: (0 :+: Emp))) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))))) = error
makes a call to
die ("Bad call to zipWith") = error
violating die's refinement type
Concrete

zipWith undefined Emp (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))))) = error
makes a call to
die fs? = error
violating die's refinement type
Concrete

zipWith undefined (0 :+: Emp) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))))) = error
makes a call to
die ("Bad call to zipWith") = error
violating die's refinement type
Concrete

zipWith undefined (0 :+: (0 :+: Emp)) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))))) = error
makes a call to
die ("Bad call to zipWith") = error
violating die's refinement type
Concrete

zipWith undefined Emp (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))))))) = error
makes a call to
die fs? = error
violating die's refinement type
Concrete

zipWith undefined (0 :+: Emp) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))))))) = error
makes a call to
die ("Bad call to zipWith") = error
violating die's refinement type
Concrete

zipWith undefined (0 :+: (0 :+: Emp)) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))))))) = error
makes a call to
die ("Bad call to zipWith") = error
violating die's refinement type
Concrete

zipWith undefined Emp (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))))))) = error
makes a call to
die fs? = error
violating die's refinement type
Concrete

zipWith undefined (0 :+: Emp) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))))))) = error
makes a call to
die ("Bad call to zipWith") = error
violating die's refinement type
Concrete

zipWith undefined Emp (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))))))))) = error
makes a call to
die fs? = error
violating die's refinement type
Concrete

zipWith undefined Emp (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))))))))) = error
makes a call to
die fs? = error
violating die's refinement type
Concrete


ERROR:


LIQUID_OUT:
LiquidHaskell Copyright 2009-15 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  Extracted Core using GHC *******************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  Uniqify & Rename ***************************************************
[0m[1;90m 
[0mRESULT: Unsafe [Just 356,Just 252,Just 349,Just 351]
[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  annotate ***********************************************************
[0m[1;90m 
[0m[1;91m
**** RESULT: UNSAFE ************************************************************
[0m

 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-12T19.04.22.lhs:196:40-60: Error: Liquid Type Mismatch
 
 196 | zipWith f _          _          = die  "Bad call to zipWith"
                                              ^^^^^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : [Char] | VV == ?b
                         && len VV >= 0}
  
   not a subtype of Required type
     VV : {VV : [Char] | false}
  
   In Context
     ?b : {?b : [Char] | ?b ~~ ?a
                         && len ?b == strLen ?a
                         && len ?b >= 0}
      
     ?a : {?a : Addr# | ?a ~~ "Bad call to zipWith"
                        && strLen ?a == 19}


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-12T19.04.22.lhs:215:16-23: Error: Liquid Type Mismatch
 
 215 | concat = fixme "concat"
                      ^^^^^^^^
 
   Inferred type
     VV : {VV : [Char] | VV == ?b
                         && len VV >= 0}
  
   not a subtype of Required type
     VV : {VV : [Char] | false}
  
   In Context
     ?b : {?b : [Char] | ?b ~~ ?a
                         && len ?b == strLen ?a
                         && len ?b >= 0}
      
     ?a : {?a : Addr# | ?a ~~ "concat"
                        && strLen ?a == 6}


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-12T19.04.22.lhs:217:24-47: Error: Liquid Type Mismatch
 
 217 | prop_concat = lAssert (length (concat xss) == 6)
                              ^^^^^^^^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : Bool | VV == ?c}
  
   not a subtype of Required type
     VV : {VV : Bool | Prop VV}
  
   In Context
     ?c : {?c : Bool | Prop ?c <=> ?a == ?b}
      
     ?b : {?b : Int | ?b == (6 : int)}
      
     ?d : {?d : (List Int) | 0 <= size ?d}
      
     ?a : {?a : Int | ?a == size ?d}
