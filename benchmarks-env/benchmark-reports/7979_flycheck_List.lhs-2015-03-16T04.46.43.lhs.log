7979
flycheck_List.lhs-2015-03-16T04.46.43.lhs
(225, '38-56')
concat
[' /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-16T04.46.43.lhs:225:38-56: Error: Liquid Type Mismatch', ' 225 | concat ((x :+: xs) :+: xss)  = x :+: concat (xs :+: xss)']

LiquidHaskell Copyright 2013-17 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  A-Normalization ****************************************************
[0m[1;90m 
[0mTimeout!

time = 120.63575625419617

LIQUID_OUT:
LiquidHaskell Copyright 2009-15 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  Extracted Core using GHC *******************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  Uniqify & Rename ***************************************************
[0m[1;90m 
[0mRESULT: Unsafe [Just 391,Just 382]
[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  annotate ***********************************************************
[0m[1;90m 
[0m[1;91m
**** RESULT: UNSAFE ************************************************************
[0m

 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-16T04.46.43.lhs:225:38-56: Error: Liquid Type Mismatch
 
 225 | concat ((x :+: xs) :+: xss)  = x :+: concat (xs :+: xss)
                                            ^^^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : (List (List a)) | VV == ?c
                                  && 0 <= size VV}
  
   not a subtype of Required type
     VV : {VV : (List (List a)) | sizeXs VV > 0}
  
   In Context
     ?c : {?c : (List (List a)) | size ?c == 1 + size ?b
                                  && sizeXs ?c == size ?a + sizeXs ?b
                                  && 0 <= size ?c}
      
     ?b : {?b : (List (List a)) | 0 <= size ?b}
      
     ?a : {?a : (List a) | 0 <= size ?a}
