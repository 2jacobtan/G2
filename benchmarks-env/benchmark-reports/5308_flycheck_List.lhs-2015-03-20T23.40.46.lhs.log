5308
flycheck_List.lhs-2015-03-20T23.40.46.lhs
(251, '1-6')
concat
[' /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-20T23.40.46.lhs:251:1-6: Error: Liquid Type Mismatch', ' 251 | concat ((:+:) Emp xss) = concat xss']

LiquidHaskell Copyright 2013-17 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  A-Normalization ****************************************************
[0m[1;90m 
[0mG2: ERROR OCCURRED IN LIQUIDHASKELL
/home/mbland/G2_Root/G2/benchmarks-env/liquidhaskell-study/wi15/unsafe/flycheck_List.lhs-2015-03-20T23.40.46.lhs:243:13-18: Error: Multiple specifications for `llsize` :
    Conflicting definitions at
     
    * /home/mbland/G2_Root/G2/benchmarks-env/liquidhaskell-study/wi15/unsafe/flycheck_List.lhs-2015-03-20T23.40.46.lhs:245:1-6
CallStack (from HasCallStack):
  error, called at src/G2/Internals/Liquid/Interface.hs:77:29 in main:G2.Internals.Liquid.Interface

2.2685370445251465

LIQUID_OUT:
LiquidHaskell Copyright 2009-15 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  Extracted Core using GHC *******************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  Uniqify & Rename ***************************************************
[0m[1;90m 
[0mRESULT: Unsafe [Just 424,Just 252,Just 399]
[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  annotate ***********************************************************
[0m[1;90m 
[0m[1;91m
**** RESULT: UNSAFE ************************************************************
[0m

 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-20T23.40.46.lhs:251:1-6: Error: Liquid Type Mismatch
 
 251 | concat ((:+:) Emp xss) = concat xss
       ^^^^^^
 
   Inferred type
     VV : {VV : (List a) | 0 <= size VV
                           && 0 <= size VV}
  
   not a subtype of Required type
     VV : {VV : (List a) | size VV == llsize ?a
                           && 0 <= size VV}
  
   In Context
     ?a : {?a : (List (List a)) | 0 <= size ?a}


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-20T23.40.46.lhs:251:26-35: Error: Liquid Type Mismatch
 
 251 | concat ((:+:) Emp xss) = concat xss
                                ^^^^^^^^^^
 
   Inferred type
     VV : {VV : (List a) | size VV == llsize xss
                           && 0 <= size VV
                           && 0 <= size VV}
  
   not a subtype of Required type
     VV : {VV : (List a) | size VV == llsize ?a
                           && 0 <= size VV}
  
   In Context
     xss : {v : (List (List a)) | 0 <= size v}
      
     ?a : {?a : (List (List a)) | 0 <= size ?a}


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-20T23.40.46.lhs:255:24-47: Error: Liquid Type Mismatch
 
 255 | prop_concat = lAssert (length (concat xss) == 6)
                              ^^^^^^^^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : Bool | VV == ?c}
  
   not a subtype of Required type
     VV : {VV : Bool | Prop VV}
  
   In Context
     ?g : {?g : (List (List Int)) | size ?g == 1 + size ?e
                                    && 0 <= size ?g}
      
     xss : {v : (List (List Int)) | size v == 1 + size ?f
                                    && 0 <= size v}
      
     ?f : {?f : (List (List Int)) | size ?f == 1 + size ?g
                                    && 0 <= size ?f}
      
     ?c : {?c : Bool | Prop ?c <=> ?b == ?d}
      
     ?h : {?h : (List Int) | size ?h == llsize xss
                             && 0 <= size ?h
                             && 0 <= size ?h}
      
     ?e : {?e : (List (List Int)) | size ?e == 1 + size ?a
                                    && 0 <= size ?e}
      
     ?b : {?b : Int | ?b == size ?h
                      && ?b >= 0}
      
     ?d : {?d : Int | ?d == (6 : int)}
      
     ?a : {?a : (List (List Int)) | size ?a == 0
                                    && 0 <= size ?a}
