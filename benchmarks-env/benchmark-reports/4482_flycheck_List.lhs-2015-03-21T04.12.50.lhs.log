4482
flycheck_List.lhs-2015-03-21T04.12.50.lhs
(234, '1-6')
popple
[' /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-21T04.12.50.lhs:234:1-6: Error: Liquid Type Mismatch', ' 234 | popple Emp           = Emp']

LiquidHaskell Copyright 2013-17 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  A-Normalization ****************************************************
[0m[1;90m 
[0mG2: ERROR OCCURRED IN LIQUIDHASKELL
/home/mbland/G2_Root/G2/benchmarks-env/liquidhaskell-study/wi15/unsafe/flycheck_List.lhs-2015-03-21T04.12.50.lhs:244:13-18: Error: Multiple specifications for `llsize` :
    Conflicting definitions at
     
    * /home/mbland/G2_Root/G2/benchmarks-env/liquidhaskell-study/wi15/unsafe/flycheck_List.lhs-2015-03-21T04.12.50.lhs:246:1-6
CallStack (from HasCallStack):
  error, called at src/G2/Internals/Liquid/Interface.hs:77:29 in main:G2.Internals.Liquid.Interface

2.3862011432647705

LIQUID_OUT:
LiquidHaskell Copyright 2009-15 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  Extracted Core using GHC *******************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  Uniqify & Rename ***************************************************
[0m[1;90m 
[0mRESULT: Unsafe [Just 468,Just 424,Just 427,Just 252,Just 399]
[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  annotate ***********************************************************
[0m[1;90m 
[0m[1;91m
**** RESULT: UNSAFE ************************************************************
[0m

 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-21T04.12.50.lhs:234:1-6: Error: Liquid Type Mismatch
 
 234 | popple Emp           = Emp
       ^^^^^^
 
   Inferred type
     VV : {VV : (List a) | size VV == 0
                           && 0 <= size VV}
  
   not a subtype of Required type
     VV : {VV : (List a) | size ?a == size VV - 1
                           || (size ?a == 0
                               && size VV == 0)}
  
   In Context
     ?a : {?a : (List a) | 0 <= size ?a}


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-21T04.12.50.lhs:252:1-6: Error: Liquid Type Mismatch
 
 252 | concat ((:+:) Emp Emp) = Emp
       ^^^^^^
 
   Inferred type
     VV : {VV : (List a) | size VV == llsize ?b
                           && 0 <= size VV}
  
   not a subtype of Required type
     VV : {VV : (List a) | size VV == llsize ?a}
  
   In Context
     ?b : {?b : (List (List a)) | 0 <= size ?b}
      
     ?a : {?a : (List (List a)) | 0 <= size ?a}


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-21T04.12.50.lhs:257:24-47: Error: Liquid Type Mismatch
 
 257 | prop_concat = lAssert (length (concat xss) == 6)
                              ^^^^^^^^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : Bool | VV == ?g}
  
   not a subtype of Required type
     VV : {VV : Bool | Prop VV}
  
   In Context
     ?g : {?g : Bool | Prop ?g <=> ?f == ?b}
      
     xss : {v : (List (List Int)) | size v == 1 + size ?c
                                    && 0 <= size v}
      
     ?f : {?f : Int | ?f == size ?h
                      && ?f >= 0}
      
     ?c : {?c : (List (List Int)) | size ?c == 1 + size ?e
                                    && 0 <= size ?c}
      
     ?h : {?h : (List Int) | size ?h == llsize xss
                             && 0 <= size ?h}
      
     ?e : {?e : (List (List Int)) | size ?e == 1 + size ?a
                                    && 0 <= size ?e}
      
     ?b : {?b : Int | ?b == (6 : int)}
      
     ?d : {?d : (List (List Int)) | size ?d == 0
                                    && 0 <= size ?d}
      
     ?a : {?a : (List (List Int)) | size ?a == 1 + size ?d
                                    && 0 <= size ?a}
