10014
flycheck_List.lhs-2015-03-14T07.13.11.lhs
(237, '22-39')
concat
[' /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-14T07.13.11.lhs:237:22-39: Error: Liquid Type Mismatch', ' 237 | concat (x1 :+: xs) = concatHelper x1 xs']

LiquidHaskell Copyright 2013-17 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  A-Normalization ****************************************************
[0m[1;90m 
[0mconcat ((0 :+: Emp) :+: Emp) = 0 :+: Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: Emp) :+: Emp) = 0 :+: Emp
violating concat's refinement type
Concrete

concat ((0 :+: (0 :+: Emp)) :+: Emp) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: (0 :+: Emp)) :+: Emp) = 0 :+: (0 :+: Emp)
violating concat's refinement type
Concrete

concat ((0 :+: (0 :+: (0 :+: Emp))) :+: Emp) = 0 :+: (0 :+: (0 :+: Emp))
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: (0 :+: (0 :+: Emp))) :+: Emp) = 0 :+: (0 :+: (0 :+: Emp))
violating concat's refinement type
Concrete

concat ((0 :+: (0 :+: (0 :+: (0 :+: Emp)))) :+: Emp) = 0 :+: (0 :+: (0 :+: (0 :+: Emp)))
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: (0 :+: (0 :+: (0 :+: Emp)))) :+: Emp) = 0 :+: (0 :+: (0 :+: (0 :+: Emp)))
violating concat's refinement type
Concrete

concat (Emp :+: ((0 :+: Emp) :+: Emp)) = 0 :+: Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: ((0 :+: Emp) :+: Emp)) = 0 :+: Emp
violating concat's refinement type
Concrete

concat ((0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) :+: Emp) = 0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) :+: Emp) = 0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))
violating concat's refinement type
Concrete

concat ((0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) :+: Emp) = 0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) :+: Emp) = 0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))
violating concat's refinement type
Concrete


time = 6.544505834579468

LIQUID_OUT:
LiquidHaskell Copyright 2009-15 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  Extracted Core using GHC *******************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  Uniqify & Rename ***************************************************
[0m[1;90m 
[0mRESULT: Unsafe [Just 316,Just 252]
[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  annotate ***********************************************************
[0m[1;90m 
[0m[1;91m
**** RESULT: UNSAFE ************************************************************
[0m

 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-14T07.13.11.lhs:237:22-39: Error: Liquid Type Mismatch
 
 237 | concat (x1 :+: xs) = concatHelper x1 xs
                            ^^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : (List a) | 0 <= size VV}
  
   not a subtype of Required type
     VV : {VV : (List a) | size VV == 0}
  
   In Context


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-14T07.13.11.lhs:241:24-47: Error: Liquid Type Mismatch
 
 241 | prop_concat = lAssert (length (concat xss) == 6)
                              ^^^^^^^^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : Bool | VV == ?c}
  
   not a subtype of Required type
     VV : {VV : Bool | Prop VV}
  
   In Context
     ?c : {?c : Bool | Prop ?c <=> ?a == ?b}
      
     ?b : {?b : Int | ?b == (6 : int)}
      
     ?d : {?d : (List Int) | size ?d == 0
                             && 0 <= size ?d}
      
     ?a : {?a : Int | ?a == size ?d}
