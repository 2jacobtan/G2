7139
flycheck_List.lhs-2015-03-16T23.00.47.lhs
(237, '1-6')
concat
[' /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-16T23.00.47.lhs:237:1-6: Error: Liquid Type Mismatch', ' 237 | concat (Emp:+:xs) = concat xs']

LiquidHaskell Copyright 2013-17 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  A-Normalization ****************************************************
[0m[1;90m 
[0m
ERROR:
G2: ERROR OCCURRED IN LIQUIDHASKELL
[/home/mbland/G2_Root/G2/benchmarks-env/liquidhaskell-study/wi15/unsafe/flycheck_List.lhs-2015-03-16T23.00.47.lhs:55:15-30: Error: Illegal type specification for `constructor List.:+:`
    constructor List.:+: :: x:a -> xs:(List a) -> {VV : (List a) | size2 VV == size x + size2 xs
                                                                   && size VV == 1 + size xs}
    Sort Error in Refinement: {VV : (List.List a_a1WW) | (size2 VV == size x + size2 xs
                                                          && size VV == 1 + size xs)}
    Cannot unify (List.List @(42)) with a_a1WW in expression: size2 VV,/home/mbland/G2_Root/G2/benchmarks-env/liquidhaskell-study/wi15/unsafe/flycheck_List.lhs-2015-03-16T23.00.47.lhs:54:15-17: Error: Illegal type specification for `constructor List.Emp`
    constructor List.Emp :: {VV : (List a) | size2 VV == 0
                                             && size VV == 0}
    Sort Error in Refinement: {VV : (List.List a_a1WW) | (size2 VV == 0
                                                          && size VV == 0)}
    Cannot unify (List.List @(42)) with a_a1WW in expression: size2 VV]
CallStack (from HasCallStack):
  error, called at src/G2/Internals/Liquid/Interface.hs:77:29 in main:G2.Internals.Liquid.Interface


LIQUID_OUT:
LiquidHaskell Copyright 2009-15 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  Extracted Core using GHC *******************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  Uniqify & Rename ***************************************************
[0m[1;90m 
[0mRESULT: Unsafe [Just 377]
WARNING: Found false in /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-16T23.00.47.lhs:142:30-42
WARNING: Found false in /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-16T23.00.47.lhs:144:11
WARNING: Found false in /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-16T23.00.47.lhs:146:40-57
WARNING: Found false in /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-16T23.00.47.lhs:147:26-41
[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  annotate ***********************************************************
[0m[1;90m 
[0m[1;91m
**** RESULT: UNSAFE ************************************************************
[0m

 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-16T23.00.47.lhs:237:1-6: Error: Liquid Type Mismatch
 
 237 | concat (Emp:+:xs) = concat xs
       ^^^^^^
 
   Inferred type
     VV : {VV : (List a) | size VV > 0
                           && size2 ?a > 0
                           && size2 ?b > 0
                           && 0 <= size VV}
  
   not a subtype of Required type
     VV : {VV : (List a) | size VV == size2 ?b
                           && size VV > 0
                           && size2 ?b > 0}
  
   In Context
     xs : {v : (List (List a)) | 0 <= size v}
      
     ?c : {?c : (List a) | 0 <= size ?c}
      
     ?b : {?b : (List (List a)) | 0 <= size ?b}
      
     ?a : {?a : (List (List a)) | ?a == ?b
                                  && 0 <= size ?a
                                  && size ?a == 1 + size xs
                                  && size2 ?a == size ?c + size2 xs
                                  && ?a == List.:+: ?c xs
                                  && size ?a == 1 + size xs
                                  && size2 ?a == size ?c + size2 xs
                                  && 0 <= size ?a}
