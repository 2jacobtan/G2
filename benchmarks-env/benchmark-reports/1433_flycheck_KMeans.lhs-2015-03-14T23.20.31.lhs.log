1433
flycheck_KMeans.lhs-2015-03-14T23.20.31.lhs
(186, '21-41')
kmeans1
[' /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_KMeans.lhs-2015-03-14T23.20.31.lhs:186:21-41: Error: Liquid Type Mismatch', ' 186 | kmeans1 k n ps cs = normalize newClusters']

LiquidHaskell Copyright 2013-17 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  A-Normalization ****************************************************
[0m[1;90m 
[0mThe call
kmeans1 0 0 Emp (fromList []) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 0 0 (Emp :+: Emp) (fromList []) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 0 0 (Emp :+: (Emp :+: Emp)) (fromList []) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 0 0 (Emp :+: (Emp :+: (Emp :+: Emp))) (fromList []) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 0 0 (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp)))) (fromList []) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 0 0 (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp))))) (fromList []) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 0 0 (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp)))))) (fromList []) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 0 0 (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp))))))) (fromList []) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 0 0 (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp)))))))) (fromList []) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 0 1 (((0.0) :+: Emp) :+: Emp) (fromList []) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 0 1 (((0.0) :+: Emp) :+: (((0.0) :+: Emp) :+: Emp)) (fromList []) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 0 1 (((0.0) :+: Emp) :+: (((0.0) :+: Emp) :+: (((0.0) :+: Emp) :+: Emp))) (fromList []) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 0 1 (((0.0) :+: Emp) :+: (((0.0) :+: Emp) :+: (((0.0) :+: Emp) :+: (((0.0) :+: Emp) :+: Emp)))) (fromList []) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 0 1 (((0.0) :+: Emp) :+: (((0.0) :+: Emp) :+: (((0.0) :+: Emp) :+: (((0.0) :+: Emp) :+: (((0.0) :+: Emp) :+: Emp))))) (fromList []) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 0 2 (((0.0) :+: ((0.0) :+: Emp)) :+: Emp) (fromList []) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 0 2 (((0.0) :+: ((0.0) :+: Emp)) :+: (((0.0) :+: ((0.0) :+: Emp)) :+: Emp)) (fromList []) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 0 2 (((0.0) :+: ((0.0) :+: Emp)) :+: (((0.0) :+: ((0.0) :+: Emp)) :+: (((0.0) :+: ((0.0) :+: Emp)) :+: Emp))) (fromList []) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 0 2 (((0.0) :+: ((0.0) :+: Emp)) :+: (((0.0) :+: ((0.0) :+: Emp)) :+: (((0.0) :+: ((0.0) :+: Emp)) :+: (((0.0) :+: ((0.0) :+: Emp)) :+: Emp)))) (fromList []) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 0 3 (((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))) :+: Emp) (fromList []) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 0 3 (((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))) :+: (((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))) :+: Emp)) (fromList []) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 0 3 (((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))) :+: (((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))) :+: (((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))) :+: Emp))) (fromList []) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 0 4 (((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))) :+: Emp) (fromList []) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 0 4 (((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))) :+: (((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))) :+: Emp)) (fromList []) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 0 4 (((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))) :+: (((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))) :+: (((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))) :+: Emp))) (fromList []) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 0 5 (((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))))) :+: Emp) (fromList []) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 0 5 (((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))))) :+: (((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))))) :+: Emp)) (fromList []) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 0 6 (((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))))) :+: Emp) (fromList []) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 0 6 (((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))))) :+: (((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))))) :+: Emp)) (fromList []) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 0 7 (((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))))))) :+: Emp) (fromList []) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 0 7 (((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))))))) :+: (((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))))))) :+: Emp)) (fromList []) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 0 8 (((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))))))) :+: Emp) (fromList []) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 0 9 (((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))))))))) :+: Emp) (fromList []) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 0 10 (((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))))))))) :+: Emp) (fromList []) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 0 11 (((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))))))))))) :+: Emp) (fromList []) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 0 12 (((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))))))))))) :+: Emp) (fromList []) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 0 13 (((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))))))))))))) :+: Emp) (fromList []) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 0 14 (((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))))))))))))) :+: Emp) (fromList []) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 0 15 (((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))))))))))))))) :+: Emp) (fromList []) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 0 16 (((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))))))))))))))) :+: Emp) (fromList []) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 0 17 (((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))))))))))))))))) :+: Emp) (fromList []) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 0 Emp (fromList ([(0, Emp)])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 0 (Emp :+: Emp) (fromList ([(0, Emp)])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 0 (Emp :+: (Emp :+: Emp)) (fromList ([(0, Emp)])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 0 (Emp :+: (Emp :+: (Emp :+: Emp))) (fromList ([(0, Emp)])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 0 (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp)))) (fromList ([(0, Emp)])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 0 (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp))))) (fromList ([(0, Emp)])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 0 Emp (fromList ([(0, Emp), (0, Emp)])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 0 (Emp :+: Emp) (fromList ([(0, Emp), (0, Emp)])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 0 (Emp :+: (Emp :+: Emp)) (fromList ([(0, Emp), (0, Emp)])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 0 (Emp :+: (Emp :+: (Emp :+: Emp))) (fromList ([(0, Emp), (0, Emp)])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 0 Emp (fromList ([(0, Emp), (0, Emp), (0, Emp)])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 0 (Emp :+: Emp) (fromList ([(0, Emp), (0, Emp), (0, Emp)])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 1 Emp (fromList ([(0, (0.0) :+: Emp)])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 1 (((0.0) :+: Emp) :+: Emp) (fromList ([(0, (0.0) :+: Emp)])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 1 (((0.0) :+: Emp) :+: (((0.0) :+: Emp) :+: Emp)) (fromList ([(0, (0.0) :+: Emp)])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 1 (((0.0) :+: Emp) :+: (((0.0) :+: Emp) :+: (((0.0) :+: Emp) :+: Emp))) (fromList ([(0, (0.0) :+: Emp)])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 1 Emp (fromList ([(0, (0.0) :+: Emp), (0, (0.0) :+: Emp)])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 1 (((0.0) :+: Emp) :+: Emp) (fromList ([(0, (0.0) :+: Emp), (0, (0.0) :+: Emp)])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 1 Emp (fromList ([(0, (0.0) :+: Emp), (0, (0.0) :+: Emp), (0, (0.0) :+: Emp)])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 2 Emp (fromList ([(0, (0.0) :+: ((0.0) :+: Emp))])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 2 (((0.0) :+: ((0.0) :+: Emp)) :+: Emp) (fromList ([(0, (0.0) :+: ((0.0) :+: Emp))])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 2 (((0.0) :+: ((0.0) :+: Emp)) :+: (((0.0) :+: ((0.0) :+: Emp)) :+: Emp)) (fromList ([(0, (0.0) :+: ((0.0) :+: Emp))])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 2 Emp (fromList ([(0, (0.0) :+: ((0.0) :+: Emp)), (0, (0.0) :+: ((0.0) :+: Emp))])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 2 (((0.0) :+: ((0.0) :+: Emp)) :+: Emp) (fromList ([(0, (0.0) :+: ((0.0) :+: Emp)), (0, (0.0) :+: ((0.0) :+: Emp))])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 3 Emp (fromList ([(0, (0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 3 (((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))) :+: Emp) (fromList ([(0, (0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 3 Emp (fromList ([(0, (0.0) :+: ((0.0) :+: ((0.0) :+: Emp))), (0, (0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 4 Emp (fromList ([(0, (0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))))])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 4 (((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))) :+: Emp) (fromList ([(0, (0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))))])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 4 Emp (fromList ([(0, (0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))), (0, (0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))))])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 5 Emp (fromList ([(0, (0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))))])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 5 (((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))))) :+: Emp) (fromList ([(0, (0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))))])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 6 Emp (fromList ([(0, (0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))))))])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 7 Emp (fromList ([(0, (0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))))))])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 8 Emp (fromList ([(0, (0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))))))))])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 9 Emp (fromList ([(0, (0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))))))))])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 10 Emp (fromList ([(0, (0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))))))))))])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 11 Emp (fromList ([(0, (0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))))))))))])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 12 Emp (fromList ([(0, (0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))))))))))))])) = error
violates kmeans1's refinement type
Concrete

The call
kmeans1 1 13 Emp (fromList ([(0, (0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))))))))))))])) = error
violates kmeans1's refinement type
Concrete


ERROR:


LIQUID_OUT:
LiquidHaskell Copyright 2009-15 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  Extracted Core using GHC *******************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  Uniqify & Rename ***************************************************
[0m[1;90m 
[0mRESULT: Unsafe [Just 148,Just 149,Just 150,Just 375,Just 151,Just 31]
[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  annotate ***********************************************************
[0m[1;90m 
[0m[1;91m
**** RESULT: UNSAFE ************************************************************
[0m

 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_KMeans.lhs-2015-03-14T23.20.31.lhs:148:30-42: Error: Liquid Type Mismatch
 
 148 | centroid n p sz = map (\x -> x `divide` sz) p
                                    ^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : Int | VV == sz}
  
   not a subtype of Required type
     VV : {VV : Int | VV /= 0}
  
   In Context
     sz : Int


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_KMeans.lhs-2015-03-14T23.20.31.lhs:186:21-41: Error: Liquid Type Mismatch
 
 186 | kmeans1 k n ps cs = normalize newClusters
                           ^^^^^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : (List Double) | 0 <= size VV}
  
   not a subtype of Required type
     VV : {VV : (List Double) | size VV == n}
  
   In Context
     n : {n : Int | n >= 0}


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_KMeans.lhs-2015-03-14T23.20.31.lhs:192:20-37: Error: Liquid Type Mismatch
 
 192 |     fr wp1 wp2   = mergeCluster n wp1 wp2
                          ^^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : Int
  
   not a subtype of Required type
     VV : {VV : Int | VV > 0}
  
   In Context


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_KMeans.lhs-2015-03-14T23.20.31.lhs:192:20-41: Error: Liquid Type Mismatch
 
 192 |     fr wp1 wp2   = mergeCluster n wp1 wp2
                          ^^^^^^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : Int
  
   not a subtype of Required type
     VV : {VV : Int | VV > 0}
  
   In Context
