2206
flycheck_List.lhs-2015-03-14T09.23.12.lhs
(264, '24-47')
prop_concat
[' /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-14T09.23.12.lhs:264:24-47: Error: Liquid Type Mismatch', ' 264 | prop_concat = lAssert (length (concat xss) == 6)']

LiquidHaskell Copyright 2013-17 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  A-Normalization ****************************************************
[0m[1;90m 
[0m
ERROR:
G2: ERROR OCCURRED IN LIQUIDHASKELL
/Users/BillHallahan/Documents/Research/SymbolicExecution/G2-benchmarks/G2/benchmarks-env/liquidhaskell-study/wi15/unsafe/flycheck_List.lhs-2015-03-14T09.23.12.lhs:235:13-19: Error: Multiple specifications for `sample2` :
    Conflicting definitions at
     
    * /Users/BillHallahan/Documents/Research/SymbolicExecution/G2-benchmarks/G2/benchmarks-env/liquidhaskell-study/wi15/unsafe/flycheck_List.lhs-2015-03-14T09.23.12.lhs:236:1-7
CallStack (from HasCallStack):
  error, called at src/G2/Internals/Liquid/Interface.hs:77:29 in main:G2.Internals.Liquid.Interface


LIQUID_OUT:
LiquidHaskell Copyright 2009-15 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  Extracted Core using GHC *******************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  Uniqify & Rename ***************************************************
[0m[1;90m 
[0mRESULT: Unsafe [Just 352,Just 353,Just 344,Just 252]
[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  annotate ***********************************************************
[0m[1;90m 
[0m[1;91m
**** RESULT: UNSAFE ************************************************************
[0m

 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-14T09.23.12.lhs:254:1-6: Error: Liquid Type Mismatch
 
 254 | concat Emp = Emp
       ^^^^^^
 
   Inferred type
     VV : {VV : (List a) | VV == x1
                           && 0 <= size VV}
  
   not a subtype of Required type
     VV : {VV : (List a) | sample2 ?a == size VV}
  
   In Context
     ?a : {?a : (List (List a)) | 0 <= size ?a}
      
     x1 : {v : (List a) | 0 <= size v}


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-14T09.23.12.lhs:256:33-63: Error: Liquid Type Mismatch
 
 256 | concat (x1 :+: (x2 :+: xs )) =  concat  ((append x1 x2) :+: xs)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : (List a) | sample2 ?a == size VV
                           && 0 <= size VV}
  
   not a subtype of Required type
     VV : {VV : (List a) | sample2 ?b == size VV}
  
   In Context
     xs : {v : (List (List a)) | 0 <= size v}
      
     ?b : {?b : (List (List a)) | 0 <= size ?b}
      
     ?a : {?a : (List (List a)) | size ?a == 1 + size xs
                                  && 0 <= size ?a}


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-14T09.23.12.lhs:264:24-47: Error: Liquid Type Mismatch
 
 264 | prop_concat = lAssert (length (concat xss) == 6)
                              ^^^^^^^^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : Bool | VV == ?g}
  
   not a subtype of Required type
     VV : {VV : Bool | Prop VV}
  
   In Context
     ?g : {?g : Bool | Prop ?g <=> ?h == ?d}
      
     xss : {v : (List (List Int)) | size v == 1 + size ?c
                                    && 0 <= size v}
      
     ?f : {?f : (List Int) | sample2 xss == size ?f
                             && 0 <= size ?f}
      
     ?c : {?c : (List (List Int)) | size ?c == 1 + size ?a
                                    && 0 <= size ?c}
      
     ?h : {?h : Int | ?h == size ?f}
      
     ?e : {?e : (List (List Int)) | size ?e == 1 + size ?b
                                    && 0 <= size ?e}
      
     ?b : {?b : (List (List Int)) | size ?b == 0
                                    && 0 <= size ?b}
      
     ?d : {?d : Int | ?d == (6 : int)}
      
     ?a : {?a : (List (List Int)) | size ?a == 1 + size ?e
                                    && 0 <= size ?a}
