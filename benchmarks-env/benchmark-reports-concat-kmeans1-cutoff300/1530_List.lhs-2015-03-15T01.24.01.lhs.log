1530
List.lhs-2015-03-15T01.24.01.lhs
(215, '23-38')
concat
[' /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/List.lhs-2015-03-15T01.24.01.lhs:215:23-38: Error: Liquid Type Mismatch', ' 215 | concat ((:+:) x xs) = foldr (+:+) x xs']

LiquidHaskell Copyright 2013-17 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  A-Normalization ****************************************************
[0m[1;90m 
[0mconcat Emp = error
makes a call to
patError = undefined
violating patError's refinement type
Concrete


5.590070962905884

LIQUID_OUT:
LiquidHaskell Copyright 2009-15 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  Extracted Core using GHC *******************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  Uniqify & Rename ***************************************************
[0m[1;90m 
[0mRESULT: Unsafe [Just 348]
[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  annotate ***********************************************************
[0m[1;90m 
[0m[1;91m
**** RESULT: UNSAFE ************************************************************
[0m

 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/List.lhs-2015-03-15T01.24.01.lhs:215:23-38: Error: Liquid Type Mismatch
 
 215 | concat ((:+:) x xs) = foldr (+:+) x xs
                             ^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : (List a) | 0 <= size VV}
  
   not a subtype of Required type
     VV : {VV : (List a) | size VV == nestedSize ?a}
  
   In Context
     ?a : {?a : (List (List a)) | nestedSize ?a >= 0
                                  && 0 <= size ?a}
