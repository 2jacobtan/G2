6164
flycheck_List.lhs-2015-03-19T23.54.55.lhs
(224, '30-60')
concat
[' /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-19T23.54.55.lhs:224:30-60: Error: Liquid Type Mismatch', ' 224 | concat (xs :+: ys :+: xss) = concat ((append xs ys) :+: xss)']

LiquidHaskell Copyright 2013-17 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  A-Normalization ****************************************************
[0m[1;90m 
[0mconcat (Emp :+: Emp) = Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: Emp) = Emp
violating concat's refinement type
Concrete


liquidhaskell-study/wi15/unsafe/flycheck_List.lhs-2015-03-19T23.54.55.lhs:145:1: warning: [-Wtabs]
    Tab character found here, and in one further location.
    Please use spaces instead.

liquidhaskell-study/wi15/unsafe/flycheck_List.lhs-2015-03-19T23.54.55.lhs:145:1: warning: [-Wtabs]
    Tab character found here, and in one further location.
    Please use spaces instead.

5.0540783405303955

LIQUID_OUT:
LiquidHaskell Copyright 2009-15 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  Extracted Core using GHC *******************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  Uniqify & Rename ***************************************************
[0m[1;90m 
[0mRESULT: Unsafe [Just 359,Just 252,Just 367]
[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  annotate ***********************************************************
[0m[1;90m 
[0m[1;91m
**** RESULT: UNSAFE ************************************************************
[0m

 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-19T23.54.55.lhs:222:1-6: Error: Liquid Type Mismatch
 
 222 | concat Emp = Emp
       ^^^^^^
 
   Inferred type
     VV : {VV : (List a) | VV == xs
                           && 0 <= size VV}
  
   not a subtype of Required type
     VV : {VV : (List a) | size VV >= size ?a}
  
   In Context
     xs : {v : (List a) | 0 <= size v}
      
     ?a : {?a : (List (List a)) | 0 <= size ?a}


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-19T23.54.55.lhs:224:30-60: Error: Liquid Type Mismatch
 
 224 | concat (xs :+: ys :+: xss) = concat ((append xs ys) :+: xss)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : (List a) | size VV >= size ?b
                           && 0 <= size VV}
  
   not a subtype of Required type
     VV : {VV : (List a) | size VV >= size ?a}
  
   In Context
     xss : {v : (List (List a)) | 0 <= size v}
      
     ?b : {?b : (List (List a)) | size ?b == 1 + size xss
                                  && 0 <= size ?b}
      
     ?a : {?a : (List (List a)) | 0 <= size ?a}


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-19T23.54.55.lhs:232:24-47: Error: Liquid Type Mismatch
 
 232 | prop_concat = lAssert (length (concat xss) == 6)
                              ^^^^^^^^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : Bool | VV == ?h}
  
   not a subtype of Required type
     VV : {VV : Bool | Prop VV}
  
   In Context
     ?g : {?g : (List Int) | size ?g >= size xss
                             && 0 <= size ?g}
      
     xss : {v : (List (List Int)) | size v == 1 + size ?f
                                    && 0 <= size v}
      
     ?f : {?f : (List (List Int)) | size ?f == 1 + size ?b
                                    && 0 <= size ?f}
      
     ?c : {?c : Int | ?c == size ?g}
      
     ?h : {?h : Bool | Prop ?h <=> ?c == ?d}
      
     ?e : {?e : (List (List Int)) | size ?e == 0
                                    && 0 <= size ?e}
      
     ?b : {?b : (List (List Int)) | size ?b == 1 + size ?a
                                    && 0 <= size ?b}
      
     ?d : {?d : Int | ?d == (6 : int)}
      
     ?a : {?a : (List (List Int)) | size ?a == 1 + size ?e
                                    && 0 <= size ?a}
