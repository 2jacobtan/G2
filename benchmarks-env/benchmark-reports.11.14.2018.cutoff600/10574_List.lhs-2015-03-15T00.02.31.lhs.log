10574
List.lhs-2015-03-15T00.02.31.lhs
(215, '13-30')
concat
[' /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/List.lhs-2015-03-15T00.02.31.lhs:215:13-30: Error: Liquid Type Mismatch', ' 215 | concat xs = foldr (+:+) Emp xs']

LiquidHaskell Copyright 2013-17 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  A-Normalization ****************************************************
[0m[1;90m 
[0mconcat Emp = Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) Emp = Emp
violating concat's refinement type
Concrete

concat (Emp :+: Emp) = Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: Emp) = Emp
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: Emp)) = Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: Emp)) = Emp
violating concat's refinement type
Concrete

concat ((0 :+: Emp) :+: Emp) = 0 :+: Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: Emp) :+: Emp) = 0 :+: Emp
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: (Emp :+: Emp))) = Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: (Emp :+: Emp))) = Emp
violating concat's refinement type
Concrete

concat (Emp :+: ((0 :+: Emp) :+: Emp)) = 0 :+: Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: ((0 :+: Emp) :+: Emp)) = 0 :+: Emp
violating concat's refinement type
Concrete

concat ((0 :+: Emp) :+: (Emp :+: Emp)) = 0 :+: Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: Emp) :+: (Emp :+: Emp)) = 0 :+: Emp
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp)))) = Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp)))) = Emp
violating concat's refinement type
Concrete

concat ((0 :+: Emp) :+: (Emp :+: (Emp :+: Emp))) = 0 :+: Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: Emp) :+: (Emp :+: (Emp :+: Emp))) = 0 :+: Emp
violating concat's refinement type
Concrete

concat (Emp :+: ((0 :+: Emp) :+: (Emp :+: Emp))) = 0 :+: Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: ((0 :+: Emp) :+: (Emp :+: Emp))) = 0 :+: Emp
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: ((0 :+: Emp) :+: Emp))) = 0 :+: Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: ((0 :+: Emp) :+: Emp))) = 0 :+: Emp
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp))))) = Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp))))) = Emp
violating concat's refinement type
Concrete

concat ((0 :+: (0 :+: Emp)) :+: Emp) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: (0 :+: Emp)) :+: Emp) = 0 :+: (+:+ (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) Emp)
violating concat's refinement type
Concrete

concat ((0 :+: Emp) :+: ((0 :+: Emp) :+: Emp)) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: Emp) :+: ((0 :+: Emp) :+: Emp)) = 0 :+: (0 :+: Emp)
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: Emp)))) = 0 :+: Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: Emp)))) = 0 :+: Emp
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: Emp)))) = 0 :+: Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: Emp)))) = 0 :+: Emp
violating concat's refinement type
Concrete

concat (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: Emp)))) = 0 :+: Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: Emp)))) = 0 :+: Emp
violating concat's refinement type
Concrete

concat ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: Emp)))) = 0 :+: Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: Emp)))) = 0 :+: Emp
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp)))))) = Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp)))))) = Emp
violating concat's refinement type
Concrete

concat ((0 :+: (0 :+: Emp)) :+: (Emp :+: Emp)) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: (0 :+: Emp)) :+: (Emp :+: Emp)) = 0 :+: (+:+ (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) Emp)
violating concat's refinement type
Concrete

concat (Emp :+: ((0 :+: (0 :+: Emp)) :+: Emp)) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: ((0 :+: (0 :+: Emp)) :+: Emp)) = 0 :+: (+:+ (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) Emp)
violating concat's refinement type
Concrete

concat ((0 :+: Emp) :+: (Emp :+: ((0 :+: Emp) :+: Emp))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: Emp) :+: (Emp :+: ((0 :+: Emp) :+: Emp))) = 0 :+: (0 :+: Emp)
violating concat's refinement type
Concrete

concat ((0 :+: Emp) :+: ((0 :+: Emp) :+: (Emp :+: Emp))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: Emp) :+: ((0 :+: Emp) :+: (Emp :+: Emp))) = 0 :+: (0 :+: Emp)
violating concat's refinement type
Concrete

concat (Emp :+: ((0 :+: Emp) :+: ((0 :+: Emp) :+: Emp))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: ((0 :+: Emp) :+: ((0 :+: Emp) :+: Emp))) = 0 :+: (0 :+: Emp)
violating concat's refinement type
Concrete

concat ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp))))) = 0 :+: Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp))))) = 0 :+: Emp
violating concat's refinement type
Concrete

concat (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: Emp))))) = 0 :+: Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: Emp))))) = 0 :+: Emp
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: Emp))))) = 0 :+: Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: Emp))))) = 0 :+: Emp
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: Emp))))) = 0 :+: Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: Emp))))) = 0 :+: Emp
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: Emp))))) = 0 :+: Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: Emp))))) = 0 :+: Emp
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp))))))) = Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp))))))) = Emp
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: ((0 :+: (0 :+: Emp)) :+: Emp))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: ((0 :+: (0 :+: Emp)) :+: Emp))) = 0 :+: (+:+ (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) Emp)
violating concat's refinement type
Concrete

concat (Emp :+: ((0 :+: (0 :+: Emp)) :+: (Emp :+: Emp))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: ((0 :+: (0 :+: Emp)) :+: (Emp :+: Emp))) = 0 :+: (+:+ (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) Emp)
violating concat's refinement type
Concrete

concat ((0 :+: (0 :+: Emp)) :+: (Emp :+: (Emp :+: Emp))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: (0 :+: Emp)) :+: (Emp :+: (Emp :+: Emp))) = 0 :+: (+:+ (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) Emp)
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: ((0 :+: Emp) :+: ((0 :+: Emp) :+: Emp)))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: ((0 :+: Emp) :+: ((0 :+: Emp) :+: Emp)))) = 0 :+: (0 :+: Emp)
violating concat's refinement type
Concrete

concat (Emp :+: ((0 :+: Emp) :+: (Emp :+: ((0 :+: Emp) :+: Emp)))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: ((0 :+: Emp) :+: (Emp :+: ((0 :+: Emp) :+: Emp)))) = 0 :+: (0 :+: Emp)
violating concat's refinement type
Concrete

concat (Emp :+: ((0 :+: Emp) :+: ((0 :+: Emp) :+: (Emp :+: Emp)))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: ((0 :+: Emp) :+: ((0 :+: Emp) :+: (Emp :+: Emp)))) = 0 :+: (0 :+: Emp)
violating concat's refinement type
Concrete

concat ((0 :+: Emp) :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: Emp)))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: Emp) :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: Emp)))) = 0 :+: (0 :+: Emp)
violating concat's refinement type
Concrete

concat ((0 :+: Emp) :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: Emp)))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: Emp) :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: Emp)))) = 0 :+: (0 :+: Emp)
violating concat's refinement type
Concrete

concat ((0 :+: Emp) :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: Emp)))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: Emp) :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: Emp)))) = 0 :+: (0 :+: Emp)
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: Emp)))))) = 0 :+: Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: Emp)))))) = 0 :+: Emp
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: Emp)))))) = 0 :+: Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: Emp)))))) = 0 :+: Emp
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: Emp)))))) = 0 :+: Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: Emp)))))) = 0 :+: Emp
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: Emp)))))) = 0 :+: Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: Emp)))))) = 0 :+: Emp
violating concat's refinement type
Concrete

concat (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp)))))) = 0 :+: Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp)))))) = 0 :+: Emp
violating concat's refinement type
Concrete

concat ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp)))))) = 0 :+: Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp)))))) = 0 :+: Emp
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp)))))))) = Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp)))))))) = Emp
violating concat's refinement type
Concrete

concat ((0 :+: Emp) :+: ((0 :+: (0 :+: Emp)) :+: Emp)) = 0 :+: (0 :+: (0 :+: Emp))
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: Emp) :+: ((0 :+: (0 :+: Emp)) :+: Emp)) = 0 :+: (0 :+: (+:+ (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) Emp))
violating concat's refinement type
Concrete

concat ((0 :+: (0 :+: Emp)) :+: ((0 :+: Emp) :+: Emp)) = 0 :+: (0 :+: (0 :+: Emp))
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: (0 :+: Emp)) :+: ((0 :+: Emp) :+: Emp)) = 0 :+: (+:+ (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) (0 :+: Emp))
violating concat's refinement type
Concrete

concat ((0 :+: (0 :+: (0 :+: Emp))) :+: Emp) = 0 :+: (0 :+: (0 :+: Emp))
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: (0 :+: (0 :+: Emp))) :+: Emp) = 0 :+: (+:+ (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: Emp)) Emp)
violating concat's refinement type
Concrete

concat ((0 :+: Emp) :+: ((0 :+: Emp) :+: ((0 :+: Emp) :+: Emp))) = 0 :+: (0 :+: (0 :+: Emp))
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: Emp) :+: ((0 :+: Emp) :+: ((0 :+: Emp) :+: Emp))) = 0 :+: (0 :+: (0 :+: Emp))
violating concat's refinement type
Concrete

concat ((0 :+: (0 :+: Emp)) :+: (Emp :+: (Emp :+: (Emp :+: Emp)))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: (0 :+: Emp)) :+: (Emp :+: (Emp :+: (Emp :+: Emp)))) = 0 :+: (+:+ (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) Emp)
violating concat's refinement type
Concrete

concat (Emp :+: ((0 :+: (0 :+: Emp)) :+: (Emp :+: (Emp :+: Emp)))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: ((0 :+: (0 :+: Emp)) :+: (Emp :+: (Emp :+: Emp)))) = 0 :+: (+:+ (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) Emp)
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: ((0 :+: (0 :+: Emp)) :+: (Emp :+: Emp)))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: ((0 :+: (0 :+: Emp)) :+: (Emp :+: Emp)))) = 0 :+: (+:+ (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) Emp)
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: (Emp :+: ((0 :+: (0 :+: Emp)) :+: Emp)))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: (Emp :+: ((0 :+: (0 :+: Emp)) :+: Emp)))) = 0 :+: (+:+ (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) Emp)
violating concat's refinement type
Concrete

concat ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: Emp))))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: Emp))))) = 0 :+: (0 :+: Emp)
violating concat's refinement type
Concrete

concat ((0 :+: Emp) :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: Emp))))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: Emp) :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: Emp))))) = 0 :+: (0 :+: Emp)
violating concat's refinement type
Concrete

concat ((0 :+: Emp) :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: Emp))))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: Emp) :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: Emp))))) = 0 :+: (0 :+: Emp)
violating concat's refinement type
Concrete

concat ((0 :+: Emp) :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: Emp))))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: Emp) :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: Emp))))) = 0 :+: (0 :+: Emp)
violating concat's refinement type
Concrete

concat (Emp :+: ((0 :+: Emp) :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: Emp))))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: ((0 :+: Emp) :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: Emp))))) = 0 :+: (0 :+: Emp)
violating concat's refinement type
Concrete

concat (Emp :+: ((0 :+: Emp) :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: Emp))))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: ((0 :+: Emp) :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: Emp))))) = 0 :+: (0 :+: Emp)
violating concat's refinement type
Concrete

concat (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: Emp))))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: Emp))))) = 0 :+: (0 :+: Emp)
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: ((0 :+: Emp) :+: Emp))))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: ((0 :+: Emp) :+: Emp))))) = 0 :+: (0 :+: Emp)
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: ((0 :+: Emp) :+: ((0 :+: Emp) :+: (Emp :+: Emp))))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: ((0 :+: Emp) :+: ((0 :+: Emp) :+: (Emp :+: Emp))))) = 0 :+: (0 :+: Emp)
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: ((0 :+: Emp) :+: Emp))))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: ((0 :+: Emp) :+: Emp))))) = 0 :+: (0 :+: Emp)
violating concat's refinement type
Concrete

concat ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp))))))) = 0 :+: Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp))))))) = 0 :+: Emp
violating concat's refinement type
Concrete

concat (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp))))))) = 0 :+: Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp))))))) = 0 :+: Emp
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp))))))) = 0 :+: Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp))))))) = 0 :+: Emp
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: Emp))))))) = 0 :+: Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: Emp))))))) = 0 :+: Emp
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: Emp))))))) = 0 :+: Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: Emp))))))) = 0 :+: Emp
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: Emp))))))) = 0 :+: Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: Emp))))))) = 0 :+: Emp
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: Emp))))))) = 0 :+: Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: Emp))))))) = 0 :+: Emp
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp))))))))) = Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp))))))))) = Emp
violating concat's refinement type
Concrete

concat (Emp :+: ((0 :+: (0 :+: Emp)) :+: ((0 :+: Emp) :+: Emp))) = 0 :+: (0 :+: (0 :+: Emp))
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: ((0 :+: (0 :+: Emp)) :+: ((0 :+: Emp) :+: Emp))) = 0 :+: (+:+ (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) (0 :+: Emp))
violating concat's refinement type
Concrete

concat (Emp :+: ((0 :+: Emp) :+: ((0 :+: (0 :+: Emp)) :+: Emp))) = 0 :+: (0 :+: (0 :+: Emp))
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: ((0 :+: Emp) :+: ((0 :+: (0 :+: Emp)) :+: Emp))) = 0 :+: (0 :+: (+:+ (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) Emp))
violating concat's refinement type
Concrete

concat ((0 :+: (0 :+: Emp)) :+: (Emp :+: ((0 :+: Emp) :+: Emp))) = 0 :+: (0 :+: (0 :+: Emp))
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: (0 :+: Emp)) :+: (Emp :+: ((0 :+: Emp) :+: Emp))) = 0 :+: (+:+ (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) (0 :+: Emp))
violating concat's refinement type
Concrete

concat ((0 :+: (0 :+: Emp)) :+: ((0 :+: Emp) :+: (Emp :+: Emp))) = 0 :+: (0 :+: (0 :+: Emp))
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: (0 :+: Emp)) :+: ((0 :+: Emp) :+: (Emp :+: Emp))) = 0 :+: (+:+ (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) (0 :+: Emp))
violating concat's refinement type
Concrete

concat ((0 :+: Emp) :+: ((0 :+: (0 :+: Emp)) :+: (Emp :+: Emp))) = 0 :+: (0 :+: (0 :+: Emp))
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: Emp) :+: ((0 :+: (0 :+: Emp)) :+: (Emp :+: Emp))) = 0 :+: (0 :+: (+:+ (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) Emp))
violating concat's refinement type
Concrete

concat ((0 :+: Emp) :+: (Emp :+: ((0 :+: (0 :+: Emp)) :+: Emp))) = 0 :+: (0 :+: (0 :+: Emp))
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: Emp) :+: (Emp :+: ((0 :+: (0 :+: Emp)) :+: Emp))) = 0 :+: (0 :+: (+:+ (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) Emp))
violating concat's refinement type
Concrete

concat ((0 :+: (0 :+: (0 :+: Emp))) :+: (Emp :+: Emp)) = 0 :+: (0 :+: (0 :+: Emp))
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: (0 :+: (0 :+: Emp))) :+: (Emp :+: Emp)) = 0 :+: (+:+ (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: Emp)) Emp)
violating concat's refinement type
Concrete

concat (Emp :+: ((0 :+: (0 :+: (0 :+: Emp))) :+: Emp)) = 0 :+: (0 :+: (0 :+: Emp))
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: ((0 :+: (0 :+: (0 :+: Emp))) :+: Emp)) = 0 :+: (+:+ (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: Emp)) Emp)
violating concat's refinement type
Concrete

concat (Emp :+: ((0 :+: Emp) :+: ((0 :+: Emp) :+: ((0 :+: Emp) :+: Emp)))) = 0 :+: (0 :+: (0 :+: Emp))
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: ((0 :+: Emp) :+: ((0 :+: Emp) :+: ((0 :+: Emp) :+: Emp)))) = 0 :+: (0 :+: (0 :+: Emp))
violating concat's refinement type
Concrete

concat ((0 :+: Emp) :+: ((0 :+: Emp) :+: ((0 :+: Emp) :+: (Emp :+: Emp)))) = 0 :+: (0 :+: (0 :+: Emp))
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: Emp) :+: ((0 :+: Emp) :+: ((0 :+: Emp) :+: (Emp :+: Emp)))) = 0 :+: (0 :+: (0 :+: Emp))
violating concat's refinement type
Concrete

concat ((0 :+: Emp) :+: ((0 :+: Emp) :+: (Emp :+: ((0 :+: Emp) :+: Emp)))) = 0 :+: (0 :+: (0 :+: Emp))
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: Emp) :+: ((0 :+: Emp) :+: (Emp :+: ((0 :+: Emp) :+: Emp)))) = 0 :+: (0 :+: (0 :+: Emp))
violating concat's refinement type
Concrete

concat ((0 :+: Emp) :+: (Emp :+: ((0 :+: Emp) :+: ((0 :+: Emp) :+: Emp)))) = 0 :+: (0 :+: (0 :+: Emp))
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: Emp) :+: (Emp :+: ((0 :+: Emp) :+: ((0 :+: Emp) :+: Emp)))) = 0 :+: (0 :+: (0 :+: Emp))
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: (Emp :+: (Emp :+: ((0 :+: (0 :+: Emp)) :+: Emp))))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: (Emp :+: (Emp :+: ((0 :+: (0 :+: Emp)) :+: Emp))))) = 0 :+: (+:+ (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) Emp)
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: (Emp :+: ((0 :+: (0 :+: Emp)) :+: (Emp :+: Emp))))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: (Emp :+: ((0 :+: (0 :+: Emp)) :+: (Emp :+: Emp))))) = 0 :+: (+:+ (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) Emp)
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: ((0 :+: (0 :+: Emp)) :+: (Emp :+: (Emp :+: Emp))))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: ((0 :+: (0 :+: Emp)) :+: (Emp :+: (Emp :+: Emp))))) = 0 :+: (+:+ (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) Emp)
violating concat's refinement type
Concrete

concat (Emp :+: ((0 :+: (0 :+: Emp)) :+: (Emp :+: (Emp :+: (Emp :+: Emp))))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: ((0 :+: (0 :+: Emp)) :+: (Emp :+: (Emp :+: (Emp :+: Emp))))) = 0 :+: (+:+ (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) Emp)
violating concat's refinement type
Concrete

concat ((0 :+: (0 :+: Emp)) :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp))))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: (0 :+: Emp)) :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp))))) = 0 :+: (+:+ (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) Emp)
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: ((0 :+: Emp) :+: Emp)))))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: ((0 :+: Emp) :+: Emp)))))) = 0 :+: (0 :+: Emp)
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: ((0 :+: Emp) :+: Emp)))))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: ((0 :+: Emp) :+: Emp)))))) = 0 :+: (0 :+: Emp)
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: ((0 :+: Emp) :+: (Emp :+: Emp)))))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: ((0 :+: Emp) :+: (Emp :+: Emp)))))) = 0 :+: (0 :+: Emp)
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: ((0 :+: Emp) :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: Emp)))))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: ((0 :+: Emp) :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: Emp)))))) = 0 :+: (0 :+: Emp)
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: Emp)))))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: Emp)))))) = 0 :+: (0 :+: Emp)
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: Emp)))))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: Emp)))))) = 0 :+: (0 :+: Emp)
violating concat's refinement type
Concrete

concat (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: Emp)))))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: Emp)))))) = 0 :+: (0 :+: Emp)
violating concat's refinement type
Concrete

concat (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: Emp)))))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: Emp)))))) = 0 :+: (0 :+: Emp)
violating concat's refinement type
Concrete

concat (Emp :+: ((0 :+: Emp) :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: Emp)))))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: ((0 :+: Emp) :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: Emp)))))) = 0 :+: (0 :+: Emp)
violating concat's refinement type
Concrete

concat (Emp :+: ((0 :+: Emp) :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: Emp)))))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: ((0 :+: Emp) :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: Emp)))))) = 0 :+: (0 :+: Emp)
violating concat's refinement type
Concrete

concat ((0 :+: Emp) :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp)))))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: Emp) :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp)))))) = 0 :+: (0 :+: Emp)
violating concat's refinement type
Concrete

concat ((0 :+: Emp) :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: Emp)))))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: Emp) :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: Emp)))))) = 0 :+: (0 :+: Emp)
violating concat's refinement type
Concrete

concat ((0 :+: Emp) :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: Emp)))))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: Emp) :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: Emp)))))) = 0 :+: (0 :+: Emp)
violating concat's refinement type
Concrete

concat ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: Emp)))))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: Emp)))))) = 0 :+: (0 :+: Emp)
violating concat's refinement type
Concrete

concat ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: Emp)))))) = 0 :+: (0 :+: Emp)
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: Emp)))))) = 0 :+: (0 :+: Emp)
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: Emp)))))))) = 0 :+: Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: Emp)))))))) = 0 :+: Emp
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: Emp)))))))) = 0 :+: Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: Emp)))))))) = 0 :+: Emp
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: Emp)))))))) = 0 :+: Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: Emp)))))))) = 0 :+: Emp
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: Emp)))))))) = 0 :+: Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: Emp)))))))) = 0 :+: Emp
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp)))))))) = 0 :+: Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp)))))))) = 0 :+: Emp
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp)))))))) = 0 :+: Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp)))))))) = 0 :+: Emp
violating concat's refinement type
Concrete

concat (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp)))))))) = 0 :+: Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp)))))))) = 0 :+: Emp
violating concat's refinement type
Concrete

concat ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp)))))))) = 0 :+: Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((0 :+: Emp) :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp)))))))) = 0 :+: Emp
violating concat's refinement type
Concrete

concat (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp)))))))))) = Emp
makes a call to
concat (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: (Emp :+: Emp)))))))))) = Emp
violating concat's refinement type
Concrete


time = 75.99345326423645

LIQUID_OUT:
LiquidHaskell Copyright 2009-15 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  Extracted Core using GHC *******************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  Uniqify & Rename ***************************************************
[0m[1;90m 
[0mRESULT: Unsafe [Just 340]
[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  annotate ***********************************************************
[0m[1;90m 
[0m[1;91m
**** RESULT: UNSAFE ************************************************************
[0m

 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/List.lhs-2015-03-15T00.02.31.lhs:215:13-30: Error: Liquid Type Mismatch
 
 215 | concat xs = foldr (+:+) Emp xs
                   ^^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : (List a) | 0 <= size VV}
  
   not a subtype of Required type
     VV : {VV : (List a) | size VV == 6}
  
   In Context
