2517
flycheck_List.lhs-2015-03-18T05.46.12.lhs
(226, '26-49')
prop_concat_1
[' /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-18T05.46.12.lhs:226:26-49: Error: Liquid Type Mismatch', ' 226 | prop_concat_1 = lAssert (length (concat xss) == 0)']

LiquidHaskell Copyright 2013-17 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  A-Normalization ****************************************************
[0m[1;90m 
[0m
ERROR:
G2: Unrecognized Data (DataCon (Name "Emp" (Just "List") 8214565720323848258 (Just (Span {start = Loc {line = 54, col = 15, file = "./liquidhaskell-study/wi15/unsafe/flycheck_List.lhs-2015-03-18T05.46.12.lhs"}, end = Loc {line = 54, col = 18, file = "./liquidhaskell-study/wi15/unsafe/flycheck_List.lhs-2015-03-18T05.46.12.lhs"}}))) (TyForAll (NamedTyBndr (Id (Name "a" Nothing 6989586621679075657 (Just (Span {start = Loc {line = 54, col = 11, file = "./liquidhaskell-study/wi15/unsafe/flycheck_List.lhs-2015-03-18T05.46.12.lhs"}, end = Loc {line = 54, col = 12, file = "./liquidhaskell-study/wi15/unsafe/flycheck_List.lhs-2015-03-18T05.46.12.lhs"}}))) TYPE)) (TyApp (TyCon (Name "List" (Just "List") 8214565720323848164 (Just (Span {start = Loc {line = 54, col = 1, file = "./liquidhaskell-study/wi15/unsafe/flycheck_List.lhs-2015-03-18T05.46.12.lhs"}, end = Loc {line = 56, col = 39, file = "./liquidhaskell-study/wi15/unsafe/flycheck_List.lhs-2015-03-18T05.46.12.lhs"}}))) (TyApp TYPE TYPE)) (TyVar (Id (Name "a" Nothing 6989586621679075657 (Just (Span {start = Loc {line = 54, col = 11, file = "./liquidhaskell-study/wi15/unsafe/flycheck_List.lhs-2015-03-18T05.46.12.lhs"}, end = Loc {line = 54, col = 12, file = "./liquidhaskell-study/wi15/unsafe/flycheck_List.lhs-2015-03-18T05.46.12.lhs"}}))) TYPE))))) with args [Var (Id (Name "fs?" Nothing 87605 Nothing) TYPE),Var (Id (Name "fs?" Nothing 87606 Nothing) TyUnknown)] in funcToSMT
CallStack (from HasCallStack):
  error, called at src/G2/Internals/Solver/Converters.hs:360:17 in main:G2.Internals.Solver.Converters


LIQUID_OUT:
LiquidHaskell Copyright 2009-15 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  Extracted Core using GHC *******************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  Uniqify & Rename ***************************************************
[0m[1;90m 
[0mRESULT: Unsafe [Just 274,Just 252]
[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  annotate ***********************************************************
[0m[1;90m 
[0m[1;91m
**** RESULT: UNSAFE ************************************************************
[0m

 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-18T05.46.12.lhs:226:26-49: Error: Liquid Type Mismatch
 
 226 | prop_concat_1 = lAssert (length (concat xss) == 0)
                                ^^^^^^^^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : Bool | VV == ?b}
  
   not a subtype of Required type
     VV : {VV : Bool | Prop VV}
  
   In Context
     ?c : {?c : (List Any) | 0 <= size ?c}
      
     ?b : {?b : Bool | Prop ?b <=> ?d == ?a}
      
     ?d : {?d : Int | ?d == size ?c}
      
     ?a : {?a : Int | ?a == (0 : int)}


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-18T05.46.12.lhs:230:24-47: Error: Liquid Type Mismatch
 
 230 | prop_concat = lAssert (length (concat xss) == 6)
                              ^^^^^^^^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : Bool | VV == ?d}
  
   not a subtype of Required type
     VV : {VV : Bool | Prop VV}
  
   In Context
     ?c : {?c : Int | ?c == (6 : int)}
      
     ?b : {?b : Int | ?b == size ?a}
      
     ?d : {?d : Bool | Prop ?d <=> ?b == ?c}
      
     ?a : {?a : (List Int) | 0 <= size ?a}
