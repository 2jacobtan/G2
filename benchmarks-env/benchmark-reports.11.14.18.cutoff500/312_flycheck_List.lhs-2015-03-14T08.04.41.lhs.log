312
flycheck_List.lhs-2015-03-14T08.04.41.lhs
(262, '24-47')
prop_concat
[' /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-14T08.04.41.lhs:262:24-47: Error: Liquid Type Mismatch', ' 262 | prop_concat = lAssert (length (concat xss) == 6)']

LiquidHaskell Copyright 2013-17 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  A-Normalization ****************************************************
[0m[1;90m 
[0mG2: ERROR OCCURRED IN LIQUIDHASKELL
/home/mbland/G2_Root/G2/benchmarks-env/liquidhaskell-study/wi15/unsafe/flycheck_List.lhs-2015-03-14T08.04.41.lhs:235:13-19: Error: Multiple specifications for `sample2` :
    Conflicting definitions at
     
    * /home/mbland/G2_Root/G2/benchmarks-env/liquidhaskell-study/wi15/unsafe/flycheck_List.lhs-2015-03-14T08.04.41.lhs:236:1-7
CallStack (from HasCallStack):
  error, called at src/G2/Internals/Liquid/Interface.hs:77:29 in main:G2.Internals.Liquid.Interface

time = 2.4095942974090576

LIQUID_OUT:
LiquidHaskell Copyright 2009-15 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  Extracted Core using GHC *******************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  Uniqify & Rename ***************************************************
[0m[1;90m 
[0mRESULT: Unsafe [Just 320,Just 336,Just 273,Just 276,Just 252]
[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  annotate ***********************************************************
[0m[1;90m 
[0m[1;91m
**** RESULT: UNSAFE ************************************************************
[0m

 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-14T08.04.41.lhs:248:1-4: Error: Liquid Type Mismatch
 
 248 | sum3 Emp =0
       ^^^^
 
   Inferred type
     VV : {VV : Int | VV == (0 : int)}
  
   not a subtype of Required type
     VV : {VV : Int | VV == sample size ?a}
  
   In Context
     ?a : {?a : (List (List a)) | 0 <= size ?a}


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-14T08.04.41.lhs:249:19-38: Error: Liquid Type Mismatch
 
 249 | sum3 (x :+: xs) = length x + (sum3 xs)
                         ^^^^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : Int | VV == ?a + ?b}
  
   not a subtype of Required type
     VV : {VV : Int | VV == sample size ?c}
  
   In Context
     xs : {v : (List (List a)) | 0 <= size v}
      
     ?c : {?c : (List (List a)) | 0 <= size ?c}
      
     ?b : {?b : Int | ?b == sample size xs}
      
     x : {v : (List a) | 0 <= size v}
      
     ?a : {?a : Int | ?a == size x}


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-14T08.04.41.lhs:253:1-6: Error: Liquid Type Mismatch
 
 253 | concat Emp = Emp
       ^^^^^^
 
   Inferred type
     VV : {VV : (List a) | 0 <= size VV}
  
   not a subtype of Required type
     VV : {VV : (List a) | sample size ?a == size VV}
  
   In Context
     ?a : {?a : (List (List a)) | 0 <= size ?a}


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-14T08.04.41.lhs:262:24-47: Error: Liquid Type Mismatch
 
 262 | prop_concat = lAssert (length (concat xss) == 6)
                              ^^^^^^^^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : Bool | VV == ?a}
  
   not a subtype of Required type
     VV : {VV : Bool | Prop VV}
  
   In Context
     ?g : {?g : (List (List Int)) | size ?g == 1 + size ?e
                                    && 0 <= size ?g}
      
     xss : {v : (List (List Int)) | size v == 1 + size ?f
                                    && 0 <= size v}
      
     ?f : {?f : (List (List Int)) | size ?f == 1 + size ?c
                                    && 0 <= size ?f}
      
     ?c : {?c : (List (List Int)) | size ?c == 1 + size ?g
                                    && 0 <= size ?c}
      
     ?h : {?h : (List Int) | sample size xss == size ?h
                             && 0 <= size ?h}
      
     ?e : {?e : (List (List Int)) | size ?e == 0
                                    && 0 <= size ?e}
      
     ?b : {?b : Int | ?b == size ?h}
      
     ?d : {?d : Int | ?d == (6 : int)}
      
     ?a : {?a : Bool | Prop ?a <=> ?b == ?d}
