3732
flycheck_List.lhs-2015-03-20T01.20.56.lhs
(231, '1-6')
concat
[' /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-20T01.20.56.lhs:231:1-6: Error: Liquid Type Mismatch', ' 231 | concat Emp = Emp']

LiquidHaskell Copyright 2013-17 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  A-Normalization ****************************************************
[0m[1;90m 
[0m
liquidhaskell-study/wi15/unsafe/flycheck_List.lhs-2015-03-20T01.20.56.lhs:146:1: warning: [-Wtabs]
    Tab character found here, and in one further location.
    Please use spaces instead.

liquidhaskell-study/wi15/unsafe/flycheck_List.lhs-2015-03-20T01.20.56.lhs:146:1: warning: [-Wtabs]
    Tab character found here, and in one further location.
    Please use spaces instead.
G2: ERROR OCCURRED IN LIQUIDHASKELL
[/home/mbland/G2_Root/G2/benchmarks-env/liquidhaskell-study/wi15/unsafe/flycheck_List.lhs-2015-03-20T01.20.56.lhs:221:13: Error: Cannot lift `size'` into refinement logic
    Please export the binder from the module to enable lifting.]
CallStack (from HasCallStack):
  error, called at src/G2/Internals/Liquid/Interface.hs:77:29 in main:G2.Internals.Liquid.Interface

time = 2.670799732208252

LIQUID_OUT:
LiquidHaskell Copyright 2009-15 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  Extracted Core using GHC *******************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  Uniqify & Rename ***************************************************
[0m[1;90m 
[0mRESULT: Unsafe [Just 374,Just 252,Just 366]
[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  annotate ***********************************************************
[0m[1;90m 
[0m[1;91m
**** RESULT: UNSAFE ************************************************************
[0m

 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-20T01.20.56.lhs:231:1-6: Error: Liquid Type Mismatch
 
 231 | concat Emp = Emp
       ^^^^^^
 
   Inferred type
     VV : {VV : (List a) | VV == xs
                           && 0 <= size VV}
  
   not a subtype of Required type
     VV : {VV : (List a) | size VV == sumSize ?a}
  
   In Context
     xs : {v : (List a) | 0 <= size v}
      
     ?a : {?a : (List (List a)) | 0 <= size ?a}


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-20T01.20.56.lhs:233:30-60: Error: Liquid Type Mismatch
 
 233 | concat (xs :+: ys :+: xss) = concat ((append xs ys) :+: xss)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : (List a) | size VV == sumSize ?b
                           && 0 <= size VV}
  
   not a subtype of Required type
     VV : {VV : (List a) | size VV == sumSize ?a}
  
   In Context
     xss : {v : (List (List a)) | 0 <= size v}
      
     ?c : {?c : (List a) | 0 <= size ?c}
      
     ?b : {?b : (List (List a)) | size ?b == 1 + size xss
                                  && size' ?b == 1 + size' xss
                                  && sumSize ?b == sumSize xss + size' ?c
                                  && 0 <= size ?b}
      
     ?a : {?a : (List (List a)) | 0 <= size ?a}


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-20T01.20.56.lhs:241:24-47: Error: Liquid Type Mismatch
 
 241 | prop_concat = lAssert (length (concat xss) == 6)
                              ^^^^^^^^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : Bool | VV == ?d}
  
   not a subtype of Required type
     VV : {VV : Bool | Prop VV}
  
   In Context
     List.l2 : {List.l2 : (List Int) | size List.l2 == 2
                                       && 0 <= size List.l2}
      
     ?g : {?g : (List (List Int)) | size ?g == 1 + size ?c
                                    && size' ?g == 1 + size' ?c
                                    && sumSize ?g == sumSize ?c + size' List.l3
                                    && 0 <= size ?g}
      
     xss : {v : (List (List Int)) | size v == 1 + size ?h
                                    && size' v == 1 + size' ?h
                                    && sumSize v == sumSize ?h + size' List.l0
                                    && 0 <= size v}
      
     List.l3 : {List.l3 : (List Int) | size List.l3 == 3
                                       && 0 <= size List.l3}
      
     ?f : {?f : (List (List Int)) | size ?f == 1 + size ?g
                                    && size' ?f == 1 + size' ?g
                                    && sumSize ?f == sumSize ?g + size' List.l2
                                    && 0 <= size ?f}
      
     ?c : {?c : (List (List Int)) | size ?c == 0
                                    && size' ?c == 0
                                    && sumSize ?c == 0
                                    && 0 <= size ?c}
      
     ?h : {?h : (List (List Int)) | size ?h == 1 + size ?f
                                    && size' ?h == 1 + size' ?f
                                    && sumSize ?h == sumSize ?f + size' List.l1
                                    && 0 <= size ?h}
      
     ?e : {?e : Int | ?e == size ?b}
      
     ?b : {?b : (List Int) | size ?b == sumSize xss
                             && 0 <= size ?b}
      
     List.l0 : {List.l0 : (List Int) | size List.l0 == 0
                                       && 0 <= size List.l0}
      
     ?d : {?d : Bool | Prop ?d <=> ?e == ?a}
      
     ?a : {?a : Int | ?a == (6 : int)}
      
     List.l1 : {List.l1 : (List Int) | size List.l1 == 1
                                       && 0 <= size List.l1}
