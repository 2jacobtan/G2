9309
flycheck_List.lhs-2015-03-15T23.14.11.lhs
(221, '17-33')
concat2
[' /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-15T23.14.11.lhs:221:17-33: Error: Liquid Type Mismatch', ' 221 | concat2 l1 l2 = foldr (:+:) l2 l1 ']

LiquidHaskell Copyright 2013-17 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  A-Normalization ****************************************************
[0m[1;90m 
[0mconcat2 (0 :+: Emp) Emp = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) Emp = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? Emp (0 :+: Emp) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 Emp (0 :+: Emp) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) Emp (0 :+: Emp) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: Emp) Emp = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 Emp Emp = 0 :+: Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) Emp Emp = 0 :+: Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? Emp Emp = 0 :+: Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: Emp) (0 :+: Emp) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) (0 :+: Emp) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: Emp) (0 :+: Emp) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: Emp)) Emp = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: Emp)) Emp = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? Emp (0 :+: (0 :+: Emp)) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 Emp (0 :+: (0 :+: Emp)) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) Emp (0 :+: (0 :+: Emp)) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: Emp)) Emp = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: Emp) (0 :+: (0 :+: Emp)) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) (0 :+: (0 :+: Emp)) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: Emp)) (0 :+: Emp) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: Emp))) Emp = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: Emp))) Emp = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? Emp (0 :+: (0 :+: (0 :+: Emp))) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: Emp)) (0 :+: Emp) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: Emp)) (0 :+: Emp) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: Emp) (0 :+: (0 :+: Emp)) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 Emp (0 :+: (0 :+: (0 :+: Emp))) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) Emp (0 :+: (0 :+: (0 :+: Emp))) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: Emp))) Emp = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 Emp Emp = 0 :+: (0 :+: Emp)
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) Emp Emp = 0 :+: (0 :+: Emp)
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? Emp Emp = 0 :+: (0 :+: Emp)
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: Emp) (0 :+: Emp) = 0 :+: Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) (0 :+: Emp) = 0 :+: Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: Emp) (0 :+: Emp) = 0 :+: Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: Emp)) Emp = 0 :+: Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: Emp)) Emp = 0 :+: Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? Emp (0 :+: (0 :+: Emp)) = 0 :+: Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 Emp (0 :+: (0 :+: Emp)) = 0 :+: Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) Emp (0 :+: (0 :+: Emp)) = 0 :+: Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: Emp)) Emp = 0 :+: Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: Emp) (0 :+: (0 :+: (0 :+: Emp))) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) (0 :+: (0 :+: (0 :+: Emp))) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: Emp))) (0 :+: Emp) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: Emp))) (0 :+: Emp) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: Emp))) (0 :+: Emp) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: Emp) (0 :+: (0 :+: (0 :+: Emp))) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) Emp = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) Emp = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? Emp (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: Emp)) (0 :+: (0 :+: Emp)) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: Emp)) (0 :+: (0 :+: Emp)) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: Emp)) (0 :+: (0 :+: Emp)) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 Emp (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) Emp (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) Emp = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: Emp) Emp = 0 :+: (0 :+: Emp)
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) Emp = 0 :+: (0 :+: Emp)
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? Emp (0 :+: Emp) = 0 :+: (0 :+: Emp)
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 Emp (0 :+: Emp) = 0 :+: (0 :+: Emp)
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) Emp (0 :+: Emp) = 0 :+: (0 :+: Emp)
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: Emp) Emp = 0 :+: (0 :+: Emp)
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: Emp) (0 :+: (0 :+: Emp)) = 0 :+: Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) (0 :+: (0 :+: Emp)) = 0 :+: Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: Emp)) (0 :+: Emp) = 0 :+: Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: Emp))) Emp = 0 :+: Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: Emp))) Emp = 0 :+: Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? Emp (0 :+: (0 :+: (0 :+: Emp))) = 0 :+: Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: Emp)) (0 :+: Emp) = 0 :+: Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: Emp)) (0 :+: Emp) = 0 :+: Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: Emp) (0 :+: (0 :+: Emp)) = 0 :+: Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 Emp (0 :+: (0 :+: (0 :+: Emp))) = 0 :+: Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) Emp (0 :+: (0 :+: (0 :+: Emp))) = 0 :+: Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: Emp))) Emp = 0 :+: Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 Emp Emp = 0 :+: (0 :+: (0 :+: Emp))
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) Emp Emp = 0 :+: (0 :+: (0 :+: Emp))
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? Emp Emp = 0 :+: (0 :+: (0 :+: Emp))
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: Emp) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) (0 :+: Emp) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: Emp))) (0 :+: (0 :+: Emp)) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: Emp))) (0 :+: (0 :+: Emp)) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: Emp)) (0 :+: (0 :+: (0 :+: Emp))) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) Emp = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) Emp = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? Emp (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) (0 :+: Emp) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) (0 :+: Emp) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: Emp) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: Emp)) (0 :+: (0 :+: (0 :+: Emp))) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: Emp)) (0 :+: (0 :+: (0 :+: Emp))) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: Emp))) (0 :+: (0 :+: Emp)) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 Emp (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) Emp (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) Emp = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: Emp) (0 :+: (0 :+: (0 :+: Emp))) = 0 :+: Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) (0 :+: (0 :+: (0 :+: Emp))) = 0 :+: Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: Emp))) (0 :+: Emp) = 0 :+: Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: Emp))) (0 :+: Emp) = 0 :+: Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: Emp))) (0 :+: Emp) = 0 :+: Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: Emp) (0 :+: (0 :+: (0 :+: Emp))) = 0 :+: Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) Emp = 0 :+: Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) Emp = 0 :+: Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? Emp (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = 0 :+: Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: Emp)) (0 :+: (0 :+: Emp)) = 0 :+: Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: Emp)) (0 :+: (0 :+: Emp)) = 0 :+: Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: Emp)) (0 :+: (0 :+: Emp)) = 0 :+: Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 Emp (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = 0 :+: Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) Emp (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = 0 :+: Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) Emp = 0 :+: Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: Emp) Emp = 0 :+: (0 :+: (0 :+: Emp))
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) Emp = 0 :+: (0 :+: (0 :+: Emp))
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? Emp (0 :+: Emp) = 0 :+: (0 :+: (0 :+: Emp))
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 Emp (0 :+: Emp) = 0 :+: (0 :+: (0 :+: Emp))
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) Emp (0 :+: Emp) = 0 :+: (0 :+: (0 :+: Emp))
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: Emp) Emp = 0 :+: (0 :+: (0 :+: Emp))
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: Emp) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) (0 :+: Emp) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: Emp))) (0 :+: (0 :+: (0 :+: Emp))) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: Emp))) (0 :+: (0 :+: (0 :+: Emp))) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: Emp))) (0 :+: (0 :+: (0 :+: Emp))) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) (0 :+: Emp) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) (0 :+: Emp) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: Emp) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) Emp = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) Emp = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? Emp (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) (0 :+: (0 :+: Emp)) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) (0 :+: (0 :+: Emp)) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: Emp)) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: Emp)) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: Emp)) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) (0 :+: (0 :+: Emp)) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 Emp (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) Emp (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) Emp = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: Emp) (0 :+: (0 :+: Emp)) = 0 :+: (0 :+: Emp)
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) (0 :+: (0 :+: Emp)) = 0 :+: (0 :+: Emp)
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: Emp)) (0 :+: Emp) = 0 :+: (0 :+: Emp)
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: Emp))) Emp = 0 :+: (0 :+: Emp)
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: Emp))) Emp = 0 :+: (0 :+: Emp)
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? Emp (0 :+: (0 :+: (0 :+: Emp))) = 0 :+: (0 :+: Emp)
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: Emp)) (0 :+: Emp) = 0 :+: (0 :+: Emp)
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: Emp)) (0 :+: Emp) = 0 :+: (0 :+: Emp)
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: Emp) (0 :+: (0 :+: Emp)) = 0 :+: (0 :+: Emp)
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 Emp (0 :+: (0 :+: (0 :+: Emp))) = 0 :+: (0 :+: Emp)
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) Emp (0 :+: (0 :+: (0 :+: Emp))) = 0 :+: (0 :+: Emp)
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: Emp))) Emp = 0 :+: (0 :+: Emp)
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 Emp Emp = 0 :+: (0 :+: (0 :+: (0 :+: Emp)))
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) Emp Emp = 0 :+: (0 :+: (0 :+: (0 :+: Emp)))
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? Emp Emp = 0 :+: (0 :+: (0 :+: (0 :+: Emp)))
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: Emp) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = 0 :+: Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = 0 :+: Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) (0 :+: Emp) = 0 :+: Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: Emp))) (0 :+: (0 :+: Emp)) = 0 :+: Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: Emp))) (0 :+: (0 :+: Emp)) = 0 :+: Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: Emp)) (0 :+: (0 :+: (0 :+: Emp))) = 0 :+: Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) Emp = 0 :+: Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) Emp = 0 :+: Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? Emp (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) = 0 :+: Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) (0 :+: Emp) = 0 :+: Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) (0 :+: Emp) = 0 :+: Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: Emp) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = 0 :+: Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: Emp)) (0 :+: (0 :+: (0 :+: Emp))) = 0 :+: Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: Emp)) (0 :+: (0 :+: (0 :+: Emp))) = 0 :+: Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: Emp))) (0 :+: (0 :+: Emp)) = 0 :+: Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 Emp (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) = 0 :+: Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) Emp (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) = 0 :+: Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) Emp = 0 :+: Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: Emp) (0 :+: Emp) = 0 :+: (0 :+: (0 :+: Emp))
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) (0 :+: Emp) = 0 :+: (0 :+: (0 :+: Emp))
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: Emp) (0 :+: Emp) = 0 :+: (0 :+: (0 :+: Emp))
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: Emp)) Emp = 0 :+: (0 :+: (0 :+: Emp))
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: Emp)) Emp = 0 :+: (0 :+: (0 :+: Emp))
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? Emp (0 :+: (0 :+: Emp)) = 0 :+: (0 :+: (0 :+: Emp))
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 Emp (0 :+: (0 :+: Emp)) = 0 :+: (0 :+: (0 :+: Emp))
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) Emp (0 :+: (0 :+: Emp)) = 0 :+: (0 :+: (0 :+: Emp))
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: Emp)) Emp = 0 :+: (0 :+: (0 :+: Emp))
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: Emp) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) (0 :+: Emp) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: Emp))) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: Emp))) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) (0 :+: (0 :+: (0 :+: Emp))) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) (0 :+: (0 :+: Emp)) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) (0 :+: (0 :+: Emp)) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: Emp)) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))) Emp = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))) Emp = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? Emp (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) (0 :+: Emp) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) (0 :+: Emp) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: Emp) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) (0 :+: (0 :+: (0 :+: Emp))) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) (0 :+: (0 :+: (0 :+: Emp))) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: Emp))) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: Emp)) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: Emp)) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) (0 :+: (0 :+: Emp)) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 Emp (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) Emp (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))) Emp = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: Emp) (0 :+: (0 :+: (0 :+: Emp))) = 0 :+: (0 :+: Emp)
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) (0 :+: (0 :+: (0 :+: Emp))) = 0 :+: (0 :+: Emp)
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: Emp))) (0 :+: Emp) = 0 :+: (0 :+: Emp)
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: Emp))) (0 :+: Emp) = 0 :+: (0 :+: Emp)
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: Emp))) (0 :+: Emp) = 0 :+: (0 :+: Emp)
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: Emp) (0 :+: (0 :+: (0 :+: Emp))) = 0 :+: (0 :+: Emp)
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) Emp = 0 :+: (0 :+: Emp)
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) Emp = 0 :+: (0 :+: Emp)
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? Emp (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = 0 :+: (0 :+: Emp)
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: Emp)) (0 :+: (0 :+: Emp)) = 0 :+: (0 :+: Emp)
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: Emp)) (0 :+: (0 :+: Emp)) = 0 :+: (0 :+: Emp)
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: Emp)) (0 :+: (0 :+: Emp)) = 0 :+: (0 :+: Emp)
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 Emp (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = 0 :+: (0 :+: Emp)
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) Emp (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = 0 :+: (0 :+: Emp)
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) Emp = 0 :+: (0 :+: Emp)
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: Emp) Emp = 0 :+: (0 :+: (0 :+: (0 :+: Emp)))
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) Emp = 0 :+: (0 :+: (0 :+: (0 :+: Emp)))
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? Emp (0 :+: Emp) = 0 :+: (0 :+: (0 :+: (0 :+: Emp)))
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 Emp (0 :+: Emp) = 0 :+: (0 :+: (0 :+: (0 :+: Emp)))
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) Emp (0 :+: Emp) = 0 :+: (0 :+: (0 :+: (0 :+: Emp)))
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: Emp) Emp = 0 :+: (0 :+: (0 :+: (0 :+: Emp)))
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: Emp) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) = 0 :+: Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) = 0 :+: Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) (0 :+: Emp) = 0 :+: Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: Emp))) (0 :+: (0 :+: (0 :+: Emp))) = 0 :+: Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: Emp))) (0 :+: (0 :+: (0 :+: Emp))) = 0 :+: Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: Emp))) (0 :+: (0 :+: (0 :+: Emp))) = 0 :+: Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) (0 :+: Emp) = 0 :+: Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) (0 :+: Emp) = 0 :+: Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: Emp) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) = 0 :+: Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) Emp = 0 :+: Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) Emp = 0 :+: Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? Emp (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) = 0 :+: Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) (0 :+: (0 :+: Emp)) = 0 :+: Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) (0 :+: (0 :+: Emp)) = 0 :+: Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: Emp)) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = 0 :+: Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: Emp)) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = 0 :+: Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: Emp)) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = 0 :+: Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) (0 :+: (0 :+: Emp)) = 0 :+: Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 Emp (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) = 0 :+: Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) Emp (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) = 0 :+: Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) Emp = 0 :+: Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: Emp) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))) (0 :+: Emp) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: Emp))) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: Emp))) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) (0 :+: (0 :+: (0 :+: Emp))) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) (0 :+: (0 :+: (0 :+: Emp))) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) (0 :+: (0 :+: (0 :+: Emp))) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: Emp))) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))) (0 :+: Emp) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))) (0 :+: Emp) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: Emp) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))))) Emp = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))))) Emp = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? Emp (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))))) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) (0 :+: (0 :+: Emp)) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) (0 :+: (0 :+: Emp)) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: Emp)) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: Emp)) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: Emp)) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) (0 :+: (0 :+: Emp)) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 Emp (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))))) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) Emp (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))))) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))))) Emp = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 Emp Emp = 0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) Emp Emp = 0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? Emp Emp = 0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: Emp) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = 0 :+: (0 :+: Emp)
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = 0 :+: (0 :+: Emp)
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) (0 :+: Emp) = 0 :+: (0 :+: Emp)
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: Emp))) (0 :+: (0 :+: Emp)) = 0 :+: (0 :+: Emp)
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: Emp))) (0 :+: (0 :+: Emp)) = 0 :+: (0 :+: Emp)
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: Emp)) (0 :+: (0 :+: (0 :+: Emp))) = 0 :+: (0 :+: Emp)
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) Emp = 0 :+: (0 :+: Emp)
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) Emp = 0 :+: (0 :+: Emp)
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? Emp (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) = 0 :+: (0 :+: Emp)
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) (0 :+: Emp) = 0 :+: (0 :+: Emp)
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) (0 :+: Emp) = 0 :+: (0 :+: Emp)
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: Emp) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = 0 :+: (0 :+: Emp)
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: Emp)) (0 :+: (0 :+: (0 :+: Emp))) = 0 :+: (0 :+: Emp)
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: Emp)) (0 :+: (0 :+: (0 :+: Emp))) = 0 :+: (0 :+: Emp)
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: Emp))) (0 :+: (0 :+: Emp)) = 0 :+: (0 :+: Emp)
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 Emp (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) = 0 :+: (0 :+: Emp)
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) Emp (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) = 0 :+: (0 :+: Emp)
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) Emp = 0 :+: (0 :+: Emp)
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: Emp) (0 :+: Emp) = 0 :+: (0 :+: (0 :+: (0 :+: Emp)))
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) (0 :+: Emp) = 0 :+: (0 :+: (0 :+: (0 :+: Emp)))
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: Emp) (0 :+: Emp) = 0 :+: (0 :+: (0 :+: (0 :+: Emp)))
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: Emp)) Emp = 0 :+: (0 :+: (0 :+: (0 :+: Emp)))
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: Emp)) Emp = 0 :+: (0 :+: (0 :+: (0 :+: Emp)))
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? Emp (0 :+: (0 :+: Emp)) = 0 :+: (0 :+: (0 :+: (0 :+: Emp)))
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 Emp (0 :+: (0 :+: Emp)) = 0 :+: (0 :+: (0 :+: (0 :+: Emp)))
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) Emp (0 :+: (0 :+: Emp)) = 0 :+: (0 :+: (0 :+: (0 :+: Emp)))
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: Emp)) Emp = 0 :+: (0 :+: (0 :+: (0 :+: Emp)))
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: Emp) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) = 0 :+: Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) = 0 :+: Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) (0 :+: Emp) = 0 :+: Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: Emp))) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = 0 :+: Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: Emp))) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = 0 :+: Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) (0 :+: (0 :+: (0 :+: Emp))) = 0 :+: Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) (0 :+: (0 :+: Emp)) = 0 :+: Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) (0 :+: (0 :+: Emp)) = 0 :+: Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: Emp)) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) = 0 :+: Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))) Emp = 0 :+: Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))) Emp = 0 :+: Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? Emp (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))) = 0 :+: Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) (0 :+: Emp) = 0 :+: Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) (0 :+: Emp) = 0 :+: Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: Emp) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) = 0 :+: Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) (0 :+: (0 :+: (0 :+: Emp))) = 0 :+: Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) (0 :+: (0 :+: (0 :+: Emp))) = 0 :+: Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: Emp))) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = 0 :+: Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: Emp)) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) = 0 :+: Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: Emp)) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) = 0 :+: Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) (0 :+: (0 :+: Emp)) = 0 :+: Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 Emp (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))) = 0 :+: Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) Emp (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))) = 0 :+: Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))) Emp = 0 :+: Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: Emp) (0 :+: (0 :+: (0 :+: Emp))) = 0 :+: (0 :+: (0 :+: Emp))
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) (0 :+: (0 :+: (0 :+: Emp))) = 0 :+: (0 :+: (0 :+: Emp))
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: Emp))) (0 :+: Emp) = 0 :+: (0 :+: (0 :+: Emp))
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: Emp))) (0 :+: Emp) = 0 :+: (0 :+: (0 :+: Emp))
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: Emp))) (0 :+: Emp) = 0 :+: (0 :+: (0 :+: Emp))
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: Emp) (0 :+: (0 :+: (0 :+: Emp))) = 0 :+: (0 :+: (0 :+: Emp))
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) Emp = 0 :+: (0 :+: (0 :+: Emp))
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) Emp = 0 :+: (0 :+: (0 :+: Emp))
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? Emp (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = 0 :+: (0 :+: (0 :+: Emp))
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: Emp)) (0 :+: (0 :+: Emp)) = 0 :+: (0 :+: (0 :+: Emp))
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: Emp)) (0 :+: (0 :+: Emp)) = 0 :+: (0 :+: (0 :+: Emp))
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: Emp)) (0 :+: (0 :+: Emp)) = 0 :+: (0 :+: (0 :+: Emp))
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 Emp (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = 0 :+: (0 :+: (0 :+: Emp))
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) Emp (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = 0 :+: (0 :+: (0 :+: Emp))
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) Emp = 0 :+: (0 :+: (0 :+: Emp))
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: Emp) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))))) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))))) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))))) (0 :+: Emp) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: Emp))) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: Emp))) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) (0 :+: (0 :+: (0 :+: Emp))) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))) (0 :+: (0 :+: Emp)) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))) (0 :+: (0 :+: Emp)) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: Emp)) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))))) Emp = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))))) Emp = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? Emp (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))))) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))))) (0 :+: Emp) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))))) (0 :+: Emp) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: Emp) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))))) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) (0 :+: (0 :+: (0 :+: Emp))) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) (0 :+: (0 :+: (0 :+: Emp))) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: Emp))) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: Emp)) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: Emp)) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))) (0 :+: (0 :+: Emp)) = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 Emp (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))))) = Emp
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) Emp (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))))) = Emp
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))))) Emp = Emp
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: Emp) Emp = 0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) Emp = 0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? Emp (0 :+: Emp) = 0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 Emp (0 :+: Emp) = 0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) Emp (0 :+: Emp) = 0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: Emp) Emp = 0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: Emp) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) = 0 :+: (0 :+: Emp)
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) = 0 :+: (0 :+: Emp)
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) (0 :+: Emp) = 0 :+: (0 :+: Emp)
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: Emp))) (0 :+: (0 :+: (0 :+: Emp))) = 0 :+: (0 :+: Emp)
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: Emp))) (0 :+: (0 :+: (0 :+: Emp))) = 0 :+: (0 :+: Emp)
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: Emp))) (0 :+: (0 :+: (0 :+: Emp))) = 0 :+: (0 :+: Emp)
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) (0 :+: Emp) = 0 :+: (0 :+: Emp)
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) (0 :+: Emp) = 0 :+: (0 :+: Emp)
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: Emp) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) = 0 :+: (0 :+: Emp)
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) Emp = 0 :+: (0 :+: Emp)
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) Emp = 0 :+: (0 :+: Emp)
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? Emp (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) = 0 :+: (0 :+: Emp)
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) (0 :+: (0 :+: Emp)) = 0 :+: (0 :+: Emp)
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) (0 :+: (0 :+: Emp)) = 0 :+: (0 :+: Emp)
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: Emp)) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = 0 :+: (0 :+: Emp)
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 (0 :+: (0 :+: Emp)) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = 0 :+: (0 :+: Emp)
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: (0 :+: Emp)) (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = 0 :+: (0 :+: Emp)
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) (0 :+: (0 :+: Emp)) = 0 :+: (0 :+: Emp)
Strengthen the refinement type of foldr to eliminate this possibility
Abstract

concat2 Emp (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) = 0 :+: (0 :+: Emp)
makes a call to
concat2 (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) Emp (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) = 0 :+: (0 :+: Emp)
violating concat2's refinement type
when
foldr (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) fs? fs? (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) Emp = 0 :+: (0 :+: Emp)
Strengthen the refinement type of foldr to eliminate this possibility
Abstract


time = 28.710643768310547

LIQUID_OUT:
LiquidHaskell Copyright 2009-15 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  Extracted Core using GHC *******************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  Uniqify & Rename ***************************************************
[0m[1;90m 
[0mRESULT: Unsafe [Just 355,Just 252]
[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  annotate ***********************************************************
[0m[1;90m 
[0m[1;91m
**** RESULT: UNSAFE ************************************************************
[0m

 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-15T23.14.11.lhs:221:17-33: Error: Liquid Type Mismatch
 
 221 | concat2 l1 l2 = foldr (:+:) l2 l1 
                       ^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : (List a) | 0 <= size VV}
  
   not a subtype of Required type
     VV : {VV : (List a) | size VV == size l1 + size l2}
  
   In Context
     l1 : {l1 : (List a) | 0 <= size l1}
      
     l2 : {l2 : (List a) | 0 <= size l2}


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-15T23.14.11.lhs:226:24-47: Error: Liquid Type Mismatch
 
 226 | prop_concat = lAssert (length (concat xss) == 6)
                              ^^^^^^^^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : Bool | VV == ?a}
  
   not a subtype of Required type
     VV : {VV : Bool | Prop VV}
  
   In Context
     ?c : {?c : Int | ?c == size ?d}
      
     ?b : {?b : Int | ?b == (6 : int)}
      
     ?d : {?d : (List Int) | 0 <= size ?d}
      
     ?a : {?a : Bool | Prop ?a <=> ?c == ?b}
