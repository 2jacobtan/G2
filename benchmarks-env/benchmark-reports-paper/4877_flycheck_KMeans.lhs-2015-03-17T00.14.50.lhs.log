4877
flycheck_KMeans.lhs-2015-03-17T00.14.50.lhs
(134, '1-12')
mergeCluster
[' /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_KMeans.lhs-2015-03-17T00.14.50.lhs:134:1-12: Error: Liquid Type Mismatch', ' 134 | mergeCluster n (n1, p1) (n2, p2) = (n1 + n2, zipWith (+) p1 p2)']

LiquidHaskell Copyright 2013-17 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  A-Normalization ****************************************************
[0m[1;90m 
[0mThe call
mergeCluster 0 (((-1), (0.0) :+: Emp)) ((1, Emp)) = error
violates mergeCluster's refinement type
Concrete

mergeCluster 0 ((0, (0.0) :+: Emp)) ((1, Emp)) = error
makes a call to
zipWith (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) fs? ((0.0) :+: Emp) Emp = error
violating zipWith's refinement type
Concrete

The call
mergeCluster 1 (((-1), Emp)) ((1, (0.0) :+: Emp)) = error
violates mergeCluster's refinement type
Concrete

mergeCluster 1 ((0, Emp)) ((1, (0.0) :+: Emp)) = error
makes a call to
zipWith (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) fs? Emp ((0.0) :+: Emp) = error
violating zipWith's refinement type
Concrete

The call
mergeCluster 0 (((-1), Emp)) ((1, Emp)) = (0, Emp)
violates mergeCluster's refinement type
Concrete

The call
mergeCluster 2 (((-1), Emp)) ((1, (0.0) :+: ((0.0) :+: Emp))) = error
violates mergeCluster's refinement type
Concrete

mergeCluster 2 ((0, Emp)) ((1, (0.0) :+: ((0.0) :+: Emp))) = error
makes a call to
zipWith (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) fs? Emp ((0.0) :+: ((0.0) :+: Emp)) = error
violating zipWith's refinement type
Concrete

The call
mergeCluster 3 (((-1), Emp)) ((1, (0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))) = error
violates mergeCluster's refinement type
Concrete

mergeCluster 3 ((0, Emp)) ((1, (0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))) = error
makes a call to
zipWith (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) fs? Emp ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))) = error
violating zipWith's refinement type
Concrete

The call
mergeCluster 4 (((-1), Emp)) ((1, (0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))))) = error
violates mergeCluster's refinement type
Concrete

The call
mergeCluster 1 (((-1), (0.0) :+: ((0.0) :+: Emp))) ((1, (0.0) :+: Emp)) = error
violates mergeCluster's refinement type
Concrete

mergeCluster 4 ((0, Emp)) ((1, (0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))))) = error
makes a call to
zipWith (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) fs? Emp ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))) = error
violating zipWith's refinement type
Concrete

mergeCluster 1 ((0, (0.0) :+: ((0.0) :+: Emp))) ((1, (0.0) :+: Emp)) = error
makes a call to
zipWith (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) fs? ((0.0) :+: Emp) Emp = error
violating zipWith's refinement type
Concrete

The call
mergeCluster 5 (((-1), Emp)) ((1, (0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))))) = error
violates mergeCluster's refinement type
Concrete

The call
mergeCluster 2 (((-1), (0.0) :+: Emp)) ((1, (0.0) :+: ((0.0) :+: Emp))) = error
violates mergeCluster's refinement type
Concrete

mergeCluster 5 ((0, Emp)) ((1, (0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))))) = error
makes a call to
zipWith (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) fs? Emp ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))))) = error
violating zipWith's refinement type
Concrete

mergeCluster 2 ((0, (0.0) :+: Emp)) ((1, (0.0) :+: ((0.0) :+: Emp))) = error
makes a call to
zipWith (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) fs? Emp ((0.0) :+: Emp) = error
violating zipWith's refinement type
Concrete

The call
mergeCluster 6 (((-1), Emp)) ((1, (0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))))))) = error
violates mergeCluster's refinement type
Concrete

The call
mergeCluster 3 (((-1), (0.0) :+: Emp)) ((1, (0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))) = error
violates mergeCluster's refinement type
Concrete

mergeCluster 6 ((0, Emp)) ((1, (0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))))))) = error
makes a call to
zipWith (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) fs? Emp ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))))) = error
violating zipWith's refinement type
Concrete

mergeCluster 3 ((0, (0.0) :+: Emp)) ((1, (0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))) = error
makes a call to
zipWith (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) fs? Emp ((0.0) :+: ((0.0) :+: Emp)) = error
violating zipWith's refinement type
Concrete

The call
mergeCluster 7 (((-1), Emp)) ((1, (0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))))))) = error
violates mergeCluster's refinement type
Concrete

The call
mergeCluster 4 (((-1), (0.0) :+: Emp)) ((1, (0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))))) = error
violates mergeCluster's refinement type
Concrete

mergeCluster 7 ((0, Emp)) ((1, (0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))))))) = error
makes a call to
zipWith (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) fs? Emp ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))))))) = error
violating zipWith's refinement type
Concrete

mergeCluster 4 ((0, (0.0) :+: Emp)) ((1, (0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))))) = error
makes a call to
zipWith (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) fs? Emp ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))) = error
violating zipWith's refinement type
Concrete

The call
mergeCluster 8 (((-1), Emp)) ((1, (0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))))))))) = error
violates mergeCluster's refinement type
Concrete

The call
mergeCluster 5 (((-1), (0.0) :+: Emp)) ((1, (0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))))) = error
violates mergeCluster's refinement type
Concrete


time = 13.591368913650513

LIQUID_OUT:
LiquidHaskell Copyright 2009-15 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  Extracted Core using GHC *******************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  Uniqify & Rename ***************************************************
[0m[1;90m 
[0mRESULT: Unsafe [Just 151,Just 152,Just 158]
[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  annotate ***********************************************************
[0m[1;90m 
[0m[1;91m
**** RESULT: UNSAFE ************************************************************
[0m

 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_KMeans.lhs-2015-03-17T00.14.50.lhs:134:1-12: Error: Liquid Type Mismatch
 
 134 | mergeCluster n (n1, p1) (n2, p2) = (n1 + n2, zipWith (+) p1 p2)
       ^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : Int | VV /= n1
                      && VV == ?a
                      && VV >= n1
                      && VV >= ?a
                      && VV > n1
                      && VV <= ?a}
  
   not a subtype of Required type
     VV : {VV : Int | VV > 0}
  
   In Context
     n2 : {n2 : Int | n2 > 0}
      
     n1 : Int
      
     ?a : {?a : Int | ?a == n1 + n2}


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_KMeans.lhs-2015-03-17T00.14.50.lhs:134:46-62: Error: Liquid Type Mismatch
 
 134 | mergeCluster n (n1, p1) (n2, p2) = (n1 + n2, zipWith (+) p1 p2)
                                                    ^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : (List Double) | VV == p2
                                && 0 <= size VV}
  
   not a subtype of Required type
     VV : {VV : (List Double) | size VV == size p1}
  
   In Context
     n : {n : Int | n >= 0}
      
     p1 : {p1 : (List Double) | 0 <= size p1}
      
     p2 : {p2 : (List Double) | size p2 == n
                                && 0 <= size p2}
