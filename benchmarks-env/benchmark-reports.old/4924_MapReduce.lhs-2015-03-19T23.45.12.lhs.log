4924
MapReduce.lhs-2015-03-19T23.45.12.lhs
(57, '15-31')
expand
[' /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/MapReduce.lhs-2015-03-19T23.45.12.lhs:57:15-31: Error: Liquid Type Mismatch', ' 57 | expand f xs = concat (map f xs)']

LiquidHaskell Copyright 2013-17 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  A-Normalization ****************************************************
[0m[1;90m 
[0mexpand undefined (0 :+: Emp) = error
makes a call to
concat fs? = error
violating concat's refinement type
Concrete

expand undefined (0 :+: (0 :+: Emp)) = error
makes a call to
concat fs? = error
violating concat's refinement type
Concrete

expand undefined (0 :+: (0 :+: (0 :+: Emp))) = error
makes a call to
concat fs? = error
violating concat's refinement type
Concrete

expand undefined (0 :+: (0 :+: (0 :+: (0 :+: Emp)))) = error
makes a call to
concat fs? = error
violating concat's refinement type
Concrete

expand undefined (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))) = error
makes a call to
concat fs? = error
violating concat's refinement type
Concrete

expand undefined (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))) = error
makes a call to
concat fs? = error
violating concat's refinement type
Concrete

expand undefined (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))) = error
makes a call to
concat fs? = error
violating concat's refinement type
Concrete

expand undefined (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))))) = error
makes a call to
concat fs? = error
violating concat's refinement type
Concrete

expand undefined (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))))) = error
makes a call to
concat fs? = error
violating concat's refinement type
Concrete

expand undefined (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))))))) = error
makes a call to
concat fs? = error
violating concat's refinement type
Concrete

expand undefined (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))))))) = error
makes a call to
concat fs? = error
violating concat's refinement type
Concrete

expand undefined (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))))))))) = error
makes a call to
concat fs? = error
violating concat's refinement type
Concrete

expand undefined (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))))))))) = error
makes a call to
concat fs? = error
violating concat's refinement type
Concrete

expand undefined (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))))))))))) = error
makes a call to
concat fs? = error
violating concat's refinement type
Concrete

expand undefined (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))))))))))) = error
makes a call to
concat fs? = error
violating concat's refinement type
Concrete

expand undefined (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))))))))))))) = error
makes a call to
concat fs? = error
violating concat's refinement type
Concrete

expand undefined (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))))))))))))) = error
makes a call to
concat fs? = error
violating concat's refinement type
Concrete

expand undefined (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))))))))))))))) = error
makes a call to
concat fs? = error
violating concat's refinement type
Concrete

expand undefined (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))))))))))))))) = error
makes a call to
concat fs? = error
violating concat's refinement type
Concrete

expand undefined (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))))))))))))))))) = error
makes a call to
concat fs? = error
violating concat's refinement type
Concrete

expand undefined (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))))))))))))))))) = error
makes a call to
concat fs? = error
violating concat's refinement type
Concrete

expand undefined (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))))))))))))))))))) = error
makes a call to
concat fs? = error
violating concat's refinement type
Concrete

expand undefined (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))))))))))))))))))) = error
makes a call to
concat fs? = error
violating concat's refinement type
Concrete

expand undefined (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))))))))))))))))))))) = error
makes a call to
concat fs? = error
violating concat's refinement type
Concrete

expand undefined (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp))))))))))))))))))))))))) = error
makes a call to
concat fs? = error
violating concat's refinement type
Concrete

expand undefined (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: (0 :+: Emp)))))))))))))))))))))))))) = error
makes a call to
concat fs? = error
violating concat's refinement type
Concrete


ERROR:


LIQUID_OUT:
LiquidHaskell Copyright 2009-15 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  Extracted Core using GHC *******************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  Uniqify & Rename ***************************************************
[0m[1;90m 
[0mRESULT: Unsafe [Just 67,Just 7,Just 11]
[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  annotate ***********************************************************
[0m[1;90m 
[0m[1;91m
**** RESULT: UNSAFE ************************************************************
[0m

 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/MapReduce.lhs-2015-03-19T23.45.12.lhs:29:13-29: Error: Liquid Type Mismatch
 
 29 |     kvs   = expand      fm xs     -- step 1
                  ^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : (List a) | VV == xs
                           && 0 <= size VV
                           && 0 <= sizes VV}
  
   not a subtype of Required type
     VV : {VV : (List a) | size VV > 0}
  
   In Context
     xs : {v : (List a) | 0 <= size v
                          && 0 <= sizes v}


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/MapReduce.lhs-2015-03-19T23.45.12.lhs:57:15-31: Error: Liquid Type Mismatch
 
 57 | expand f xs = concat (map f xs)
                    ^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : (List (a, b)) | size VV == sizes ?a
                                && 0 <= size VV}
  
   not a subtype of Required type
     VV : {VV : (List (a, b)) | size VV > 0}
  
   In Context
     xs : {v : (List a) | size v > 0
                          && 0 <= size v
                          && 0 <= sizes v}
      
     ?a : {?a : (List (List (a, b))) | size ?a == size xs
                                       && 0 <= size ?a
                                       && 0 <= sizes ?a}


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/MapReduce.lhs-2015-03-19T23.45.12.lhs:81:21-28: Error: Liquid Type Mismatch
 
 81 | collapse f = M.map (foldr1 f)
                          ^^^^^^^^
 
   Inferred type
     VV : {VV : (List a) | 0 <= size VV
                           && 0 <= sizes VV}
  
   not a subtype of Required type
     VV : {VV : (List a) | size VV > 0}
  
   In Context
