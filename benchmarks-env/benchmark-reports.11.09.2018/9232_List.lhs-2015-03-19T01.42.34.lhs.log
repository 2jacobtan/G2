9232
List.lhs-2015-03-19T01.42.34.lhs
(167, '26-55')
prop_map
[' /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/List.lhs-2015-03-19T01.42.34.lhs:167:26-55: Error: Liquid Type Mismatch', ' 167 | prop_map f xs = lAssert (length xs == length (map f xs))']

LiquidHaskell Copyright 2013-17 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  A-Normalization ****************************************************
[0m[1;90m 
[0mprop_map undefined (0 :+: Emp) = error
makes a call to
die (lh lhEqBool lhNeBool lhLtBool lhLeBool lhGtBool lhGeBool lhPPBool) ("Assert Fails!") = error
violating die's refinement type
when
map (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) undefined (0 :+: Emp) = Emp
Strengthen the refinement type of map to eliminate this possibility
Abstract

prop_map undefined Emp = error
makes a call to
die (lh lhEqBool lhNeBool lhLtBool lhLeBool lhGtBool lhGeBool lhPPBool) ("Assert Fails!") = error
violating die's refinement type
when
map (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) undefined Emp = 0 :+: Emp
Strengthen the refinement type of map to eliminate this possibility
Abstract

prop_map undefined (0 :+: Emp) = error
makes a call to
die (lh lhEqBool lhNeBool lhLtBool lhLeBool lhGtBool lhGeBool lhPPBool) ("Assert Fails!") = error
violating die's refinement type
when
length (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((undefined 0) :+: (map (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) undefined Emp)) = 0
Strengthen the refinement type of length to eliminate this possibility
Abstract

prop_map undefined (0 :+: Emp) = error
makes a call to
die (lh lhEqBool lhNeBool lhLtBool lhLeBool lhGtBool lhGeBool lhPPBool) ("Assert Fails!") = error
violating die's refinement type
when
length (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (0 :+: Emp) = 0
Strengthen the refinement type of length to eliminate this possibility
Abstract

prop_map undefined (0 :+: (0 :+: Emp)) = error
makes a call to
die (lh lhEqBool lhNeBool lhLtBool lhLeBool lhGtBool lhGeBool lhPPBool) ("Assert Fails!") = error
violating die's refinement type
when
map (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) undefined (0 :+: (0 :+: Emp)) = Emp
Strengthen the refinement type of map to eliminate this possibility
Abstract

prop_map undefined Emp = error
makes a call to
die (lh lhEqBool lhNeBool lhLtBool lhLeBool lhGtBool lhGeBool lhPPBool) ("Assert Fails!") = error
violating die's refinement type
when
map (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) undefined Emp = 0 :+: (0 :+: Emp)
Strengthen the refinement type of map to eliminate this possibility
Abstract

prop_map undefined (0 :+: (0 :+: Emp)) = error
makes a call to
die (lh lhEqBool lhNeBool lhLtBool lhLeBool lhGtBool lhGeBool lhPPBool) ("Assert Fails!") = error
violating die's refinement type
when
length (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) ((undefined 0) :+: (map (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) (lh lhEqInt lhNeInt lhLtInt lhLeInt lhGtInt lhGeInt lhPPInt) undefined (0 :+: Emp))) = 0
Strengthen the refinement type of length to eliminate this possibility
Abstract


ERROR:


LIQUID_OUT:
LiquidHaskell Copyright 2009-15 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  Extracted Core using GHC *******************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  Uniqify & Rename ***************************************************
[0m[1;90m 
[0mRESULT: Unsafe [Just 336,Just 274,Just 291,Just 297,Just 345,Just 346,Just 283,Just 252,Just 350]
[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  annotate ***********************************************************
[0m[1;90m 
[0m[1;91m
**** RESULT: UNSAFE ************************************************************
[0m

 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/List.lhs-2015-03-19T01.42.34.lhs:100:23-36: Error: Liquid Type Mismatch
 
 100 | prop_size  = lAssert (length l3 == 3)
                             ^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : Bool | VV == ?c}
  
   not a subtype of Required type
     VV : {VV : Bool | Prop VV}
  
   In Context
     List.l3 : {List.l3 : (List Int) | size List.l3 == 3
                                       && 0 <= size List.l3}
      
     ?c : {?c : Bool | Prop ?c <=> ?a == ?b}
      
     ?b : {?b : Int | ?b == (3 : int)}
      
     ?a : {?a : Int | 0 <= ?a
                      && ?a <= size List.l3}


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/List.lhs-2015-03-19T01.42.34.lhs:152:31-57: Error: Liquid Type Mismatch
 
 152 | prop_replicate n x = lAssert (n == length (replicate n x))
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : Bool | VV == ?b}
  
   not a subtype of Required type
     VV : {VV : Bool | Prop VV}
  
   In Context
     n : {n : Int | n >= 0}
      
     ?c : {?c : (List a) | size ?c == n
                           && 0 <= size ?c}
      
     ?b : {?b : Bool | Prop ?b <=> n == ?a}
      
     ?a : {?a : Int | 0 <= ?a
                      && ?a <= size ?c}


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/List.lhs-2015-03-19T01.42.34.lhs:167:26-55: Error: Liquid Type Mismatch
 
 167 | prop_map f xs = lAssert (length xs == length (map f xs))
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : Bool | VV == ?a}
  
   not a subtype of Required type
     VV : {VV : Bool | Prop VV}
  
   In Context
     xs : {v : (List a) | 0 <= size v}
      
     ?c : {?c : (List a) | 0 <= size ?c}
      
     ?b : {?b : Int | 0 <= ?b
                      && ?b <= size xs}
      
     ?d : {?d : Int | 0 <= ?d
                      && ?d <= size ?c}
      
     ?a : {?a : Bool | Prop ?a <=> ?b == ?d}


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/List.lhs-2015-03-19T01.42.34.lhs:179:28-63: Error: Liquid Type Mismatch
 
 179 | foldr1 op Emp        = die "Cannot call foldr1 with empty list"
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : [Char] | VV == ?b
                         && len VV >= 0}
  
   not a subtype of Required type
     VV : {VV : [Char] | false}
  
   In Context
     ?b : {?b : [Char] | ?b ~~ ?a
                         && len ?b == strLen ?a
                         && len ?b >= 0}
      
     ?a : {?a : Addr# | ?a ~~ "Cannot call foldr1 with empty list"
                        && strLen ?a == 34}


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/List.lhs-2015-03-19T01.42.34.lhs:198:40-60: Error: Liquid Type Mismatch
 
 198 | zipWith f _          _          = die  "Bad call to zipWith"
                                              ^^^^^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : [Char] | VV == ?a
                         && len VV >= 0}
  
   not a subtype of Required type
     VV : {VV : [Char] | false}
  
   In Context
     ?b : {?b : Addr# | ?b ~~ "Bad call to zipWith"
                        && strLen ?b == 19}
      
     ?a : {?a : [Char] | ?a ~~ ?b
                         && len ?a == strLen ?b
                         && len ?a >= 0}


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/List.lhs-2015-03-19T01.42.34.lhs:201:28-50: Error: Liquid Type Mismatch
 
 201 | prop_zipWith xs = lAssert (length xs == length x2s)
                                  ^^^^^^^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : Bool | VV == ?c}
  
   not a subtype of Required type
     VV : {VV : Bool | Prop VV}
  
   In Context
     xs : {v : (List a) | 0 <= size v}
      
     ?c : {?c : Bool | Prop ?c <=> ?a == ?b}
      
     ?b : {?b : Int | 0 <= ?b
                      && ?b <= size x2s}
      
     ?a : {?a : Int | 0 <= ?a
                      && ?a <= size xs}
      
     x2s : {v : (List a) | 0 <= size v}


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/List.lhs-2015-03-19T01.42.34.lhs:217:16-23: Error: Liquid Type Mismatch
 
 217 | concat = fixme "concat"
                      ^^^^^^^^
 
   Inferred type
     VV : {VV : [Char] | VV == ?a
                         && len VV >= 0}
  
   not a subtype of Required type
     VV : {VV : [Char] | false}
  
   In Context
     ?b : {?b : Addr# | ?b ~~ "concat"
                        && strLen ?b == 6}
      
     ?a : {?a : [Char] | ?a ~~ ?b
                         && len ?a == strLen ?b
                         && len ?a >= 0}


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/List.lhs-2015-03-19T01.42.34.lhs:219:24-47: Error: Liquid Type Mismatch
 
 219 | prop_concat = lAssert (length (concat xss) == 6)
                              ^^^^^^^^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : Bool | VV == ?c}
  
   not a subtype of Required type
     VV : {VV : Bool | Prop VV}
  
   In Context
     ?c : {?c : Bool | Prop ?c <=> ?a == ?b}
      
     ?b : {?b : Int | ?b == (6 : int)}
      
     ?d : {?d : (List Int) | 0 <= size ?d}
      
     ?a : {?a : Int | 0 <= ?a
                      && ?a <= size ?d}
