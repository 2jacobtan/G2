7825
List.lhs-2015-03-15T03.13.10.lhs
(167, '26-55')
prop_map
[' /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/List.lhs-2015-03-15T03.13.10.lhs:167:26-55: Error: Liquid Type Mismatch', ' 167 | prop_map f xs = lAssert (length xs == length (map f xs))']

LiquidHaskell Copyright 2013-17 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  A-Normalization ****************************************************
[0m[1;90m 
[0m
ERROR:
G2: ERROR OCCURRED IN LIQUIDHASKELL
/home/mbland/G2_Root/G2/benchmarks-env/liquidhaskell-study/wi15/unsafe/List.lhs-2015-03-15T03.13.10.lhs:143:18: Error: Illegal type specification for `List.replicate`
    List.replicate :: v:Int -> a -> {v : (List a) | size v == v}
    Sort Error in Refinement: {v : (List.List a_a2f5) | size v == v}
    The sort (List.List a_a2f5) is not numeric
  because
Cannot unify int with (List.List a_a2f5) in expression: size v == v
  because
Invalid Relation size v == v with operand types int and (List.List a_a2f5)
CallStack (from HasCallStack):
  error, called at src/G2/Internals/Liquid/Interface.hs:77:29 in main:G2.Internals.Liquid.Interface


LIQUID_OUT:
LiquidHaskell Copyright 2009-15 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  Extracted Core using GHC *******************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  Uniqify & Rename ***************************************************
[0m[1;90m 
[0mRESULT: Unsafe [Just 353,Just 274,Just 322,Just 354,Just 323,Just 358,Just 344,Just 283,Just 252]
[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  annotate ***********************************************************
[0m[1;90m 
[0m[1;91m
**** RESULT: UNSAFE ************************************************************
[0m

 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/List.lhs-2015-03-15T03.13.10.lhs:142:1-9: Error: Liquid Type Mismatch
 
 142 | replicate i a
       ^^^^^^^^^
 
   Inferred type
     VV : {VV : (List a) | 0 <= size VV}
  
   not a subtype of Required type
     VV : {VV : (List a) | size VV == i}
  
   In Context
     i : Int


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/List.lhs-2015-03-15T03.13.10.lhs:143:21-65: Error: Liquid Type Mismatch
 
 143 |   | i < 0     = die "Can't replicate a negative number of times!"
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : [Char] | VV == ?b
                         && len VV >= 0}
  
   not a subtype of Required type
     VV : {VV : [Char] | false}
  
   In Context
     ?b : {?b : [Char] | ?b ~~ ?a
                         && len ?b == strLen ?a
                         && len ?b >= 0}
      
     ?a : {?a : Addr# | ?a ~~ "Can't replicate a negative number of times!"
                        && strLen ?a == 43}


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/List.lhs-2015-03-15T03.13.10.lhs:167:26-55: Error: Liquid Type Mismatch
 
 167 | prop_map f xs = lAssert (length xs == length (map f xs))
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : Bool | VV == ?d}
  
   not a subtype of Required type
     VV : {VV : Bool | Prop VV}
  
   In Context
     xs : {v : (List a) | 0 <= size v}
      
     ?c : {?c : Int | ?c == size ?b}
      
     ?b : {?b : (List a) | 0 <= size ?b}
      
     ?d : {?d : Bool | Prop ?d <=> ?a == ?c}
      
     ?a : {?a : Int | ?a == size xs}


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/List.lhs-2015-03-15T03.13.10.lhs:179:28-63: Error: Liquid Type Mismatch
 
 179 | foldr1 op Emp        = die "Cannot call foldr1 with empty list"
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : [Char] | VV == ?a
                         && len VV >= 0}
  
   not a subtype of Required type
     VV : {VV : [Char] | false}
  
   In Context
     ?b : {?b : Addr# | ?b ~~ "Cannot call foldr1 with empty list"
                        && strLen ?b == 34}
      
     ?a : {?a : [Char] | ?a ~~ ?b
                         && len ?a == strLen ?b
                         && len ?a >= 0}


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/List.lhs-2015-03-15T03.13.10.lhs:198:40-60: Error: Liquid Type Mismatch
 
 198 | zipWith f _          _          = die  "Bad call to zipWith"
                                              ^^^^^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : [Char] | VV == ?b
                         && len VV >= 0}
  
   not a subtype of Required type
     VV : {VV : [Char] | false}
  
   In Context
     ?b : {?b : [Char] | ?b ~~ ?a
                         && len ?b == strLen ?a
                         && len ?b >= 0}
      
     ?a : {?a : Addr# | ?a ~~ "Bad call to zipWith"
                        && strLen ?a == 19}


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/List.lhs-2015-03-15T03.13.10.lhs:201:28-50: Error: Liquid Type Mismatch
 
 201 | prop_zipWith xs = lAssert (length xs == length x2s)
                                  ^^^^^^^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : Bool | VV == ?c}
  
   not a subtype of Required type
     VV : {VV : Bool | Prop VV}
  
   In Context
     xs : {v : (List a) | 0 <= size v}
      
     ?c : {?c : Bool | Prop ?c <=> ?a == ?b}
      
     ?b : {?b : Int | ?b == size x2s}
      
     ?a : {?a : Int | ?a == size xs}
      
     x2s : {v : (List a) | 0 <= size v}


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/List.lhs-2015-03-15T03.13.10.lhs:217:16-23: Error: Liquid Type Mismatch
 
 217 | concat = fixme "concat"
                      ^^^^^^^^
 
   Inferred type
     VV : {VV : [Char] | VV == ?b
                         && len VV >= 0}
  
   not a subtype of Required type
     VV : {VV : [Char] | false}
  
   In Context
     ?b : {?b : [Char] | ?b ~~ ?a
                         && len ?b == strLen ?a
                         && len ?b >= 0}
      
     ?a : {?a : Addr# | ?a ~~ "concat"
                        && strLen ?a == 6}


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/List.lhs-2015-03-15T03.13.10.lhs:219:24-47: Error: Liquid Type Mismatch
 
 219 | prop_concat = lAssert (length (concat xss) == 6)
                              ^^^^^^^^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : Bool | VV == ?a}
  
   not a subtype of Required type
     VV : {VV : Bool | Prop VV}
  
   In Context
     ?c : {?c : Int | ?c == size ?b}
      
     ?b : {?b : (List Int) | 0 <= size ?b}
      
     ?d : {?d : Int | ?d == (6 : int)}
      
     ?a : {?a : Bool | Prop ?a <=> ?c == ?d}
