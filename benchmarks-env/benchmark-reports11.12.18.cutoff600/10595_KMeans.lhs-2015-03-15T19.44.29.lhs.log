10595
KMeans.lhs-2015-03-15T19.44.29.lhs
(134, '46-62')
mergeCluster
[' /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/KMeans.lhs-2015-03-15T19.44.29.lhs:134:46-62: Error: Liquid Type Mismatch', ' 134 | mergeCluster n (n1, p1) (n2, p2) = (n1 + n2, zipWith (+) p1 p2)']

LiquidHaskell Copyright 2013-17 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  A-Normalization ****************************************************
[0m[1;90m 
[0mmergeCluster 0 ((1, Emp)) ((0, undefined :+: Emp)) = error
makes a call to
zipWith (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) fs? Emp (undefined :+: Emp) = error
violating zipWith's refinement type
Concrete

mergeCluster 1 ((1, (0.0) :+: Emp)) ((0, Emp)) = error
makes a call to
zipWith (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) fs? ((0.0) :+: Emp) Emp = error
violating zipWith's refinement type
Concrete

mergeCluster 2 ((1, (0.0) :+: ((0.0) :+: Emp))) ((0, Emp)) = error
makes a call to
zipWith (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) fs? ((0.0) :+: ((0.0) :+: Emp)) Emp = error
violating zipWith's refinement type
Concrete

mergeCluster 1 ((1, (0.0) :+: Emp)) ((0, (0.0) :+: (undefined :+: Emp))) = error
makes a call to
zipWith (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) fs? Emp (undefined :+: Emp) = error
violating zipWith's refinement type
Concrete

mergeCluster 3 ((1, (0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))) ((0, Emp)) = error
makes a call to
zipWith (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) fs? ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))) Emp = error
violating zipWith's refinement type
Concrete

mergeCluster 2 ((1, (0.0) :+: ((0.0) :+: Emp))) ((0, (0.0) :+: Emp)) = error
makes a call to
zipWith (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) fs? ((0.0) :+: Emp) Emp = error
violating zipWith's refinement type
Concrete

mergeCluster 4 ((1, (0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))))) ((0, Emp)) = error
makes a call to
zipWith (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) fs? ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))) Emp = error
violating zipWith's refinement type
Concrete

mergeCluster 3 ((1, (0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))) ((0, (0.0) :+: Emp)) = error
makes a call to
zipWith (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) fs? ((0.0) :+: ((0.0) :+: Emp)) Emp = error
violating zipWith's refinement type
Concrete

mergeCluster 5 ((1, (0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp)))))) ((0, Emp)) = error
makes a call to
zipWith (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) (lh lhEqDouble lhNeDouble lhLtDouble lhLeDouble lhGtDouble lhGeDouble lhPPDouble) fs? ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: ((0.0) :+: Emp))))) Emp = error
violating zipWith's refinement type
Concrete


7.536278247833252

LIQUID_OUT:
LiquidHaskell Copyright 2009-15 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  Extracted Core using GHC *******************************************
[0m[1;90m 
[0munknown symbol in qualifier: "n##and3"
unknown symbol in qualifier: "n##and3"
unknown symbol in qualifier: "n##and3"
unknown symbol in qualifier: "n##and3"
[1;94m
**** DONE:  Uniqify & Rename ***************************************************
[0m[1;90m 
[0mRESULT: Unsafe [Just 33,Just 34,Just 42,Just 139,Just 60,Just 61,Just 62,Just 63]
[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  annotate ***********************************************************
[0m[1;90m 
[0m[1;91m
**** RESULT: UNSAFE ************************************************************
[0m

 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/KMeans.lhs-2015-03-15T19.44.29.lhs:134:46-62: Error: Liquid Type Mismatch
 
 134 | mergeCluster n (n1, p1) (n2, p2) = (n1 + n2, zipWith (+) p1 p2)
                                                    ^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : (List Double) | VV == p2
                                && 0 <= size VV}
  
   not a subtype of Required type
     VV : {VV : (List Double) | size VV == size p1}
  
   In Context
     n : {n : Int | n >= 0}
      
     p1 : {p1 : (List Double) | size p1 == n
                                && 0 <= size p1}
      
     p2 : {p2 : (List Double) | 0 <= size p2}


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/KMeans.lhs-2015-03-15T19.44.29.lhs:182:21-41: Error: Liquid Type Mismatch
 
 182 | kmeans1 k n ps cs = normalize newClusters
                           ^^^^^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : Int
  
   not a subtype of Required type
     VV : {VV : Int | VV > 0}
  
   In Context


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/KMeans.lhs-2015-03-15T19.44.29.lhs:185:21-55: Error: Liquid Type Mismatch
 
 185 |     normalize     = M.map (\(sz, p) -> centroid n p sz)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : (List Double) | 0 <= size VV}
  
   not a subtype of Required type
     VV : {VV : (List Double) | size VV == n}
  
   In Context
     n : {n : Int | n >= 0}


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/KMeans.lhs-2015-03-15T19.44.29.lhs:186:34-35: Error: Liquid Type Mismatch
 
 186 |     newClusters   = mapReduce fm fr ps
                                        ^^
 
   Inferred type
     VV : Int
  
   not a subtype of Required type
     VV : {VV : Int | VV > 0}
  
   In Context
