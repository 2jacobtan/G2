9313
flycheck_List.lhs-2015-03-21T04.44.45.lhs
(258, '24-47')
prop_concat
[' /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-21T04.44.45.lhs:258:24-47: Error: Liquid Type Mismatch', ' 258 | prop_concat = lAssert (length (concat xss) == 6)']

LiquidHaskell Copyright 2013-17 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  A-Normalization ****************************************************
[0m[1;90m 
[0mG2: ERROR OCCURRED IN LIQUIDHASKELL
/home/mbland/G2_Root/G2/benchmarks-env/liquidhaskell-study/wi15/unsafe/flycheck_List.lhs-2015-03-21T04.44.45.lhs:245:13-18: Error: Multiple specifications for `llsize` :
    Conflicting definitions at
     
    * /home/mbland/G2_Root/G2/benchmarks-env/liquidhaskell-study/wi15/unsafe/flycheck_List.lhs-2015-03-21T04.44.45.lhs:247:1-6
CallStack (from HasCallStack):
  error, called at src/G2/Internals/Liquid/Interface.hs:77:29 in main:G2.Internals.Liquid.Interface

2.04539155960083

LIQUID_OUT:
LiquidHaskell Copyright 2009-15 Regents of the University of California. All Rights Reserved.

[1;94m
**** DONE:  Extracted Core using GHC *******************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  Uniqify & Rename ***************************************************
[0m[1;90m 
[0mRESULT: Unsafe [Just 416,Just 418,Just 396,Just 252]
[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** START: pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  pandoc *************************************************************
[0m[1;90m 
[0m[1;94m
**** DONE:  annotate ***********************************************************
[0m[1;90m 
[0m[1;91m
**** RESULT: UNSAFE ************************************************************
[0m

 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-21T04.44.45.lhs:253:1-6: Error: Liquid Type Mismatch
 
 253 | concat Emp             = Emp
       ^^^^^^
 
   Inferred type
     VV : {VV : (List a) | size VV == 0
                           && 0 <= size VV}
  
   not a subtype of Required type
     VV : {VV : (List a) | size VV == llsize ?a}
  
   In Context
     ?a : {?a : (List (List a)) | 0 <= size ?a}


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-21T04.44.45.lhs:254:26-35: Error: Liquid Type Mismatch
 
 254 | concat ((:+:) Emp xss) = concat xss
                                ^^^^^^^^^^
 
   Inferred type
     VV : {VV : (List a) | size VV == llsize xss
                           && 0 <= size VV}
  
   not a subtype of Required type
     VV : {VV : (List a) | size VV == llsize ?a}
  
   In Context
     xss : {v : (List (List a)) | 0 <= size v}
      
     ?a : {?a : (List (List a)) | 0 <= size ?a}


 /home/gridaphobe/src/liquidhaskell/benchmarks/ucsd/wi15/final/liquid-cache/flycheck_List.lhs-2015-03-21T04.44.45.lhs:258:24-47: Error: Liquid Type Mismatch
 
 258 | prop_concat = lAssert (length (concat xss) == 6)
                              ^^^^^^^^^^^^^^^^^^^^^^^^
 
   Inferred type
     VV : {VV : Bool | VV == ?h}
  
   not a subtype of Required type
     VV : {VV : Bool | Prop VV}
  
   In Context
     ?g : {?g : (List (List Int)) | size ?g == 1 + size ?d
                                    && 0 <= size ?g}
      
     xss : {v : (List (List Int)) | size v == 1 + size ?g
                                    && 0 <= size v}
      
     ?f : {?f : Int | ?f == (6 : int)}
      
     ?c : {?c : (List (List Int)) | size ?c == 0
                                    && 0 <= size ?c}
      
     ?h : {?h : Bool | Prop ?h <=> ?b == ?f}
      
     ?e : {?e : (List (List Int)) | size ?e == 1 + size ?c
                                    && 0 <= size ?e}
      
     ?b : {?b : Int | ?b == size ?a
                      && ?b >= 0}
      
     ?d : {?d : (List (List Int)) | size ?d == 1 + size ?e
                                    && 0 <= size ?d}
      
     ?a : {?a : (List Int) | size ?a == llsize xss
                             && 0 <= size ?a}
